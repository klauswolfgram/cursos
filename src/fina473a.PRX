#INCLUDE "PROTHEUS.CH"
#INCLUDE "FINA473A.CH" 
#include "fileio.ch"
#INCLUDE "FWMVCDEF.CH"

Static __lConManual := .F.
Static __nHdlPrv	:= 0
Static __cArquivo
Static __nTotal		:= 0
Static __cLote		:= ""
Static __aFlagCTB	:= {}
Static __aSelFIL	:= {}
Static __aTmpFil	:= {}
Static __aRecCtb	:= {}
Static __lFA473Co	:= ExistBlock("FA473CON")
Static __aRetE5E1	:= {}

//-------------------------------------------------------------------
/*/{Protheus.doc} FINA473A
Rotina de Conciliação Bancária - Tela de Conciliação

Essa rotina é chamada pela rotina FINA473 na opção conciliação
@author	Alvaro Camillo Neto
@since		30/09/2013
@version	MP11.90
		
/*/
//-------------------------------------------------------------------

Function FINA473A()

Local aArea		:= GetArea()

Pergunte("FINA473",.F.)

RestArea(aArea)
Return()

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473IniCTB()
Rotina de Conciliação Bancária - Tela de Conciliação

Essa rotina é chamada pela rotina FINA473 na opção conciliação
@author	Alvaro Camillo Neto
@since		30/09/2013
@version	MP11.90
		
/*/
//-------------------------------------------------------------------
Function FI473IniCTB(aSelFil)

Default aSelFil := { cFilAnt }

__lConManual := .F.
__nHdlPrv	 := 0
__cArquivo	 := ""
__nTotal	 := 0
__cLote		 := ""
__aFlagCTB	 := {}
__aSelFil	 := aSelFil
__aTmpFil	 := {}
__aRecCtb	 := {}

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} ModelDef
Função de definição do modelo do extrato bancário

@author	Alvaro Camillo Neto
@since		25/09/2013
@version	MP11.90
		
/*/
//-------------------------------------------------------------------
Static Function ModelDef()

Local oModel
Local oStr1 := MontaSCab()
Local oStr2 := FWFormStruct(1,'SIG')
Local oStr3 := MontaSRec() 
Local oStr4 := MontaSPag()
Local oStr6 := MontaSSal()
Local oStr5 := Nil
Local nY	:= 0
Local aAux	:= {}

//Ponto de Entrada permite incluir 02 campos na query da função FI473CSIG
//01 Campo tabela SIG e 01 Campo tabela SE5
If __lFA473Co
	__aRetE5E1 := ExecBlock("FA473CON",.F.,.F.)
	For nY := 1 To Len(__aRetE5E1)
	                              // Titulo do Campo                        Nome do Campo                  Tamanho do Campo
		aAdd(aAux, {Posicione("SX3", 2, __aRetE5E1[1][1], "X3_TITULO" ), Alltrim(__aRetE5E1[1][1]), "C", TamSX3(__aRetE5E1[1][1])[1] }) // Tabela SIG
		aAdd(aAux, {Posicione("SX3", 2, __aRetE5E1[1][2], "X3_TITULO" ), Alltrim(__aRetE5E1[1][2]), "C", TamSX3(__aRetE5E1[1][2])[1] }) // Tabela SE5
	Next nY
	__aRetE5E1 := aClone(aAux)
Endif

oModel := MPFormModel():New('FINA473A',,,{|oModel| FI473Grv(oModel) } )

oModel:addFields('CONMASTER',,oStr1,,,{|oModel| FI473LCab(oModel) } )

oStr2:AddField(STR0001,STR0001 , 'BANCO', 'C',3 )//'Banco'#'Banco'
oStr2:AddField(STR0002,STR0002 , 'COR', 'BT',30 )//'Cor'##'Cor'
oStr2:AddField(STR0003,STR0004 , 'SEQDIG', 'C',5 )//'Seq Dig'##'Sequencia Digitacao'
oStr2:AddField('RecnoSE5',"Recno SE5" , 'RECSE5', 'N',16,0 )
oStr2:AddField('Desconciliado',"Desconciliado" , 'DESCONC', 'C',1,0 )

If __lFA473Co
	oStr2:AddField('','', __aRetE5E1[2][2], __aRetE5E1[2][3],__aRetE5E1[2][4],0 )
Endif

oModel:addGrid('CONDETAIL','CONMASTER',oStr2,{|| F473LinePre()},,,, {|oModel| FI473LItem(oModel) })
oModel:addGrid('TOTREC','CONMASTER',oStr3,,,,,{|oModel| FI473LRec(oModel) })
oModel:addGrid('TOTPAG','CONMASTER',oStr4,,,,,{|oModel| FI473LPag(oModel) })
oModel:addGrid('TOTSAL','CONMASTER',oStr6,,,,,{|oModel| FI473LSal(oModel) })

oModel:SetRelation('CONDETAIL', { { 'IG_FILIAL', 'FILIAL' }, { 'BANCO', 'BANCO' } }, SIG->(IndexKey(1)) )
oModel:SetRelation('TOTSAL', { { 'FILIAL', 'FILIAL' }, { 'BANCO', 'BANCO' } }, '' )
oModel:SetRelation('TOTREC', { { 'FILIAL', 'FILIAL' }, { 'BANCO', 'BANCO' } }, '' )
oModel:SetRelation('TOTPAG', { { 'FILIAL', 'FILIAL' }, { 'BANCO', 'BANCO' } }, '' )

oModel:getModel('CONMASTER'):SetDescription(STR0005)//'Parâmetros da Conciliação'
oModel:SetDescription(STR0006)//'Conciliação Bancária'
oModel:getModel('CONDETAIL'):SetDescription(STR0007)//'Movimentos'
oModel:getModel('CONDETAIL'):SetMaxLine(9990)
oModel:getModel('TOTREC'):SetDescription(STR0008)//'Recebimentos'
oModel:getModel('TOTPAG'):SetDescription(STR0009)//'Pagamentos'
oModel:getModel('TOTSAL'):SetDescription(STR0010)//'Saldos Bancários'
oModel:getModel('TOTSAL'):SetOptional(.T.)
oModel:getModel('TOTPAG'):SetOptional(.T.)
oModel:getModel('TOTREC'):SetOptional(.T.)
oModel:getModel('CONDETAIL'):SetOptional(.T.)

oModel:SetActivate({|oModel| FI473ACTMD(oModel,.T.) } )

oModel:getModel('TOTREC'):SetNoDeleteLine(.T.)
oModel:getModel('TOTPAG'):SetNoDeleteLine(.T.)
oModel:getModel('TOTSAL'):SetNoDeleteLine(.T.)
oModel:getModel('TOTREC'):SetNoInsertLine(.T.)
oModel:getModel('TOTPAG'):SetNoInsertLine(.T.)
oModel:getModel('TOTSAL'):SetNoInsertLine(.T.)
oModel:getModel('CONDETAIL'):SetNoInsertLine(.T.)

Return oModel

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473Grv
Realiza a gravação da conciliação, atualizando os saldos bancarios.

@author	Alvaro Camillo Neto
@since		02/10/2013
@version	MP11.90
		
/*/
//-------------------------------------------------------------------
Static Function FI473Grv(oModel)

Local aArea		:= GetArea()
Local oModelDet	:= oModel:GetModel('CONDETAIL')
Local oModelCab	:= oModel:GetModel('CONMASTER')
Local nLinha	:= 0
Local cSeqCon	:= ""
Local nRECSE5	:= 0
Local nValor	:= 0
Local lF473AtuDt:= ExistBlock("F473ATUDT")
Local cStatus	:= ""
Local lAtuDtDisp:= .T.
Local aProcesso	:= {}
Local lDigita	:= If( oModelCab:GetValue('MOSTRACTB') == '1', .T., .F. )
Local lAglutina	:= If( oModelCab:GetValue('AGLUTINA' ) == '1', .T., .F. )
Local cFilX		:= cFilAnt
Local cAux		:= ""
Local lUsaFlag	:= SuperGetMV( "MV_CTBFLAG" , .T. /*lHelp*/, .F. /*cPadrao*/) 

Local lDesconc	:= .F.
Local dDataExt	:= CTOD("")
Local dDataMov	:= CTOD("")
Local dDataNova	:= CTOD("")

Local lFK5		:= .F. // Realizou Seek na FKA utilizando FK5 no Seek
Local lFKs		:= .T. // Registro da SE5 possui dados nas Tabelas FK's
Local lRet		:= .T.

Local aSeek		:= {}
Local nVlrSE5	:= 0
Local lGrvSIG	:= .T.

DbSelectArea("FKA")
DbSelectArea("FK5")
FK5->( DbSetOrder(1) )
SIF->( DbSetOrder(1) ) //IF_FILIAL+IF_IDPROC
SIG->( DbSetOrder(2) ) //IG_SEQMOV
SE5->( DbSetOrder(20)) //E5_FILIAL+E5_SEQCON
SA6->( DbSetOrder(1) )

// Atualização da SIG apenas dos movimentos conciliados
For nLinha := 1 To oModelDet:Length()
	oModelDet:GoLine(nLinha)
	
	nRECSE5 := 0
	lGrvSIG := .T.
	aSeek	:= {}

	If !oModelDet:IsDeleted()
		cSeqCon	 := oModelDet:GetValue("IG_SEQMOV")
		cStatus	 := oModelDet:GetValue("IG_STATUS")
		lDesconc := oModelDet:GetValue("DESCONC") == '1'
		dDataExt := oModelDet:GetValue("IG_DTEXTR")
		dDataMov := oModelDet:GetValue("IG_DTMOVI")
		nValor   := 0
		nVlrSE5	 := If(oModelDet:GetValue("IG_VLREXT") > 0, oModelDet:GetValue("IG_VLREXT"), oModelDet:GetValue("IG_VLRMOV"))
		nRECSE5	 := oModelDet:GetValue("RECSE5")

		//Se a Sequencia da Conciliacao estiver selecionada 
		//para gravacao em outro item, nao faz a gravacao
		If cStatus == "1"
			aSeek	:= {}
			Aadd( aSeek, { "IG_SEQMOV", cSeqCon	} )
			Aadd( aSeek, { "IG_STATUS", "2"		} )
			
			If oModelDet:SeekLine( aSeek )
				If oModelDet:GetLine() <> nLinha
					lGrvSIG := .F.
				EndIf
			EndIf

			aSeek	:= {}
			Aadd( aSeek, {"IG_SEQMOV", cSeqCon	} )
			Aadd( aSeek, {"IG_STATUS", "4"		} )
			
			If oModelDet:SeekLine(aSeek)
				If oModelDet:GetLine() <> nLinha
					lGrvSIG := .F.
				EndIf
			EndIf
		EndIf

		//Retorna para a Linha Original
		oModelDet:GoLine(nLinha)
	
		If lGrvSIG .AND. ( !(cStatus $ '1/4') .Or. lDesconc )
			If SIG->( DbSeek( cSeqCon ) )
				
				nPos := aScan(aProcesso,{|aItem| aItem[1]+aItem[2] == SIG->IG_FILIAL + SIG->IG_IDPROC })
				If nPos <= 0
					aAdd(aProcesso,{SIG->IG_FILIAL,SIG->IG_IDPROC})
				EndIf
				
				RecLock("SIG", .F. )
					nValor			:= oModelDet:GetValue("IG_VLRMOV")
					SIG->IG_VLRMOV	:= oModelDet:GetValue("IG_VLRMOV")
					SIG->IG_DTMOVI	:= oModelDet:GetValue("IG_DTMOVI")
					SIG->IG_DOCMOV	:= oModelDet:GetValue("IG_DOCMOV")
					SIG->IG_AGEMOV	:= oModelDet:GetValue("IG_AGEMOV")
					SIG->IG_CONMOV	:= oModelDet:GetValue("IG_CONMOV")
					SIG->IG_STATUS	:= If( nValor > 0, "4", "1" )
					SIG->IG_HISMOV	:= oModelDet:GetValue("IG_HISMOV")
					SIG->IG_NATMOV	:= oModelDet:GetValue("IG_NATMOV")
					SIG->IG_EFETIVA	:= oModelDet:GetValue("IG_EFETIVA")
				SIG->( MsUnLock() )
				
			EndIf
			//Ponto de entrada para que não se atulize a data de disponibilidade
			//do movimento bancario no sistema.
			If lF473AtuDt
				lAtuDtDisp := ExecBlock("F473ATUDT",.F.,.F.)
			Endif
			
			//Atualiza SE5 e atualiza o Saldo
			If nRECSE5 > 0
				
				SE5->( DbGoTo(nRECSE5) )
								
				//Posiciona a FKA com base no IDORIG da SE5 posicionada
				FKA->( DbSetOrder(3) )
				If SE5->E5_TABORI == "FK1"
					FKA->( DbSeek( SE5->E5_FILIAL + "FK1" + SE5->E5_IDORIG ) )
					lFK5 := .F. // Precisa fazer o loop na FKA procurando o registro de Movimentação Bancaria
					lFKs := .T. // Possui dados migrados
					
				ElseIf SE5->E5_TABORI == "FK2"
					FKA->( DbSeek( SE5->E5_FILIAL + "FK2" + SE5->E5_IDORIG ) )
					lFK5 := .F. // Precisa fazer o loop na FKA procurando o registro de Movimentação Bancaria
					lFKs := .T. // Possui dados migrados
					
				ElseIf SE5->E5_TABORI == "FK5"
					FKA->( DbSeek( SE5->E5_FILIAL + "FK5" + SE5->E5_IDORIG ) )
					lFK5 := .T. // NÃO PRECISA fazer o loop na FKA procurando o registro de Movimentação Bancaria, pois esse é o registro de movimentação
					lFKs := .T. // Possui dados migrados
					cIdOrig := FKA->FKA_IDORIG
					cFilFKA := FKA->FKA_FILIAL
					
				ElseIf Empty(SE5->E5_TABORI)
					lFKs := .F. // NÃO POSSUI dados migrados
				EndIf
				
				If lFKs // Possui dados migrados
					
					cIdProc := FKA->FKA_IDPROC
					
					If !lFK5 // Precisa fazer o loop na FKA procurando o registro de Movimentação Bancaria
						FKA->( DbSetOrder(2) )
						FKA->( DbSeek( FKA->FKA_FILIAL + cIdProc ) )
						
						While FKA->(!EOF()) .AND. FKA->FKA_IDPROC == cIdProc
							
							If FKA->FKA_TABORI == "FK5"
								cIdOrig := FKA->FKA_IDORIG
								cFilFKA := FKA->FKA_FILIAL
							EndIf
							FKA->(DbSkip())
						Enddo
					EndIf
					
					If FK5->( DbSeek( cFilFKA + cIdOrig ) )
						
						If !lDesconc //Conciliou
							Reclock( "SE5", .F. )
								SE5->E5_RECONC	:= 'x'
								SE5->E5_SEQCON	:= cSeqCon
							SE5->( MsUnLock() )
							
							Reclock("FK5", .F.)
								FK5->FK5_DTCONC	:= dDataBase
								FK5->FK5_DATA		:= dDataMov
								FK5->FK5_MOEDA	:= SE5->E5_MOEDA
								FK5->FK5_VALOR	:= nVlrSE5
								FK5->FK5_NATURE	:= SE5->E5_NATUREZ
								FK5->FK5_RECPAG	:= SE5->E5_RECPAG
								FK5->FK5_TPDOC	:= SE5->E5_TIPODOC
								FK5->FK5_SEQCON	:= cSeqCon
							FK5->( MsUnLock() )							
						Else //Desconciliou
							Reclock( "SE5", .F. )
								SE5->E5_RECONC	:= ' '
								SE5->E5_SEQCON	:= ' '
							SE5->( MsUnLock() )
							
							Reclock("FK5", .F.)
								FK5->FK5_DTCONC	:= CTOD("")
								FK5->FK5_DATA		:= dDataMov
								FK5->FK5_MOEDA	:= SE5->E5_MOEDA
								FK5->FK5_VALOR	:= nVlrSE5
								FK5->FK5_NATURE	:= SE5->E5_NATUREZ
								FK5->FK5_RECPAG	:= SE5->E5_RECPAG
								FK5->FK5_TPDOC	:= SE5->E5_TIPODOC
								FK5->FK5_SEQCON	:= ""
							SE5->( MsUnLock() )
						EndIf
					Else
						cLog := STR0087 + cFilFKA + "' " + STR0088 + cIdOrig + "' "//"Registro não localizado na tabela FK5. Filial: '" 
						Help( ,,"MF473GRV1",,cLog, 1, 0 )
					EndIf
				Else // Registro da SE5 não possui dados nas Tabelas FKs, não foi migrado.
				
					If !lDesconc //Conciliou
						Reclock( "SE5", .F. )
							SE5->E5_RECONC	:= 'x'
							SE5->E5_SEQCON	:= cSeqCon
						SE5->( MsUnLock() )
					Else //Desconciliou
						Reclock( "SE5", .F. )
							SE5->E5_RECONC	:= ' '
							SE5->E5_SEQCON	:= ' ' 
						SE5->( MsUnLock() )
					EndIf
					
				EndIf
						
				If lDesconc
					dDataNova := dDataMov
				Else
					dDataNova := dDataExt
				EndIf
				
				//Acerto E5_DTDISPO dos titulos baixados
				If dDataNova !=  SE5->E5_DTDISPO .and. lAtuDtDisp
					
					dOldDispo := SE5->E5_DTDISPO
					
					If lFKs // Possui dados migrados
						//Posiciona a FK5 com base no IDORIG da SE5 posicionada
						DbSelectArea("FK5")
						FK5->( DbSetOrder(1) )
						
						If FK5->( DbSeek( xFilial("SE5") + SE5->E5_IDORIG ) )
							Reclock("FK5", .F.)
								FK5->FK5_DTDISP	:= SE5->E5_DTDISPO
							FK5->(MsUnlock())
							
							If SE5->E5_RECPAG == "P"
								AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dOldDispo, SE5->E5_VALOR, "+", lDesconc )
								AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DTDISPO, SE5->E5_VALOR, "-", !lDesconc )
							Else
								AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dOldDispo, SE5->E5_VALOR, "-", lDesconc )
								AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DTDISPO, SE5->E5_VALOR, "+", !lDesconc )
							EndIf
							
						Else
							cLog := STR0087 + cFilFKA + "' " + STR0088 + cIdOrig + "' " //"Registro não localizado na tabela FK5. Filial: '" 
							Help( , , "MF473GRV2", , STR0089 + CRLF + cLog, 1, 0 ) // "Não foi possivel atualizar o Saldo do Banco."
						EndIf
						
					Else // Registro da SE5 não possui dados nas Tabelas FKs, dados não foram migrados.
						If SE5->E5_RECPAG == "P"
							AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dOldDispo, SE5->E5_VALOR, "+", lDesconc )
							AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DTDISPO, SE5->E5_VALOR, "-", !lDesconc )
						Else
							AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, dOldDispo, SE5->E5_VALOR, "-", lDesconc )
							AtuSalBco( SE5->E5_BANCO, SE5->E5_AGENCIA, SE5->E5_CONTA, SE5->E5_DTDISPO, SE5->E5_VALOR, "+", !lDesconc )
						EndIf
					EndIf
				
				Else
					//Atualiza apenas o saldo reconciliado
					If lDesconc	    //Desconciliou
						AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DTDISPO,SE5->E5_VALOR,If(SE5->E5_RECPAG == "P","+","-"),.T.,.F.)
					Else //Conciliou
						AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DTDISPO,SE5->E5_VALOR,If(SE5->E5_RECPAG == "P","-","+"),.T.,.F.)
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
Next nLinha

//Atualiza os Status da tabela SIF
For nLinha := 1 to Len(aProcesso)
	If SIF->(dbSeek(aProcesso[nLinha][1] + aProcesso[nLinha][2] ))
		cStatus := SIFStatus(aProcesso[nLinha][2],aProcesso[nLinha][1])
		RecLock("SIF",.F.)
			SIF->IF_STATUS := cStatus
		MsUnLock()
	EndIf
Next nLinha

// Contabilizacao

If Len(__aRecCtb) > 0
	
	ASort(__aRecCtb,,,{|x,y| x[3] < y[3] })
	
	cAux		:= __aRecCtb[1][3]
	cFilAnt	:= __aRecCtb[1][3]
	
	For nLinha:= 1 to Len(__aRecCtb)
		
		cPadrao := __aRecCtb[nLinha][2]
				
		SE5->(dbGoTo(__aRecCtb[nLinha][1]))
		
		SA6->(MSSeek(xFilial("SA6")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA))
	
		If __nHdlPrv <= 0
			//Inicializa Lancamento Contabil   
			__cLote := LoteCont("FIN")
			__nHdlPrv := HeadProva( __cLote,"FINA470" /*cPrograma*/,Substr( cUsuario, 7, 6 ),@__cArquivo )
		Endif
		
		If __nHdlPrv > 0
			
			//Prepara Lancamento Contabil  
			If lUsaFlag  // Armazena em aFlagCTB para atualizar no modulo Contabil
				aAdd( __aFlagCTB, {"E5_LA", "S", "SE5", SE5->( Recno() ), 0, 0, 0} )
			Endif
			
			__nTotal += DetProva(	__nHdlPrv, cPadrao, "FINA470" /*cPrograma*/, __cLote,/*nLinha*/,/*lExecuta*/,/*cCriterio*/,/*lRateio*/,;
                    					/*cChaveBusca*/, /*aCT5*/, /*lPosiciona*/, @__aFlagCTB, /*aTabRecOri*/,/*aDadosProva*/ )
			
			If !lUsaFlag
				
				//Posiciona a FKA com base no IDORIG da SE5 posicionada
				FKA->( DbSetOrder(3) )
				If SE5->E5_TABORI == "FK1"
					FKA->( DbSeek( SE5->E5_FILIAL + "FK1" + SE5->E5_IDORIG ) )
					lFK5 := .F. // Precisa fazer o loop na FKA procurando o registro de Movimentação Bancaria
					lFKs := .T. // Possui dados migrados
				ElseIf SE5->E5_TABORI == "FK2"
					FKA->( DbSeek( SE5->E5_FILIAL + "FK2" + SE5->E5_IDORIG ) )
					lFK5 := .F. // Precisa fazer o loop na FKA procurando o registro de Movimentação Bancaria
					lFKs := .T. // Possui dados migrados
				ElseIf SE5->E5_TABORI == "FK5"
					FKA->( DbSeek( SE5->E5_FILIAL + "FK5" + SE5->E5_IDORIG ) )
					lFK5 := .T. // NÃO PRECISA fazer o loop na FKA procurando o registro de Movimentação Bancaria, pois esse é o registro de movimentação
					lFKs := .T. // Possui dados migrados
					cIdOrig := FKA->FKA_IDORIG
					cFilFKA := FKA->FKA_FILIAL
				ElseIf Empty(SE5->E5_TABORI)
					lFKs := .F. // NÃO POSSUI dados migrados
				EndIf
				
				If lFKs // Possui dados migrados
					
					cIdProc := FKA->FKA_IDPROC
					
					If !lFK5 // Precisa fazer o loop na FKA procurando o registro de Movimentação Bancaria
						FKA->( DbSetOrder(2) )
						FKA->( DbSeek( FKA->FKA_FILIAL + cIdProc ) )
						
						While FKA->(!EOF()) .AND. FKA->FKA_IDPROC == cIdProc
							
							If FKA->FKA_TABORI == "FK5"
								cIdOrig := FKA->FKA_IDORIG
								cFilFKA := FKA->FKA_FILIAL
							EndIf
							FKA->(DbSkip())
						Enddo
					EndIf
					
					If FK5->( DbSeek( cFilFKA + cIdOrig ) )
						Reclock("FK5", .F.)
							FK5->FK5_LA	:= "S"
						FK5->(MsUnlock())
						
						Reclock("SE5", .F.)
							SE5->E5_LA	:= "S"
						SE5->(MsUnlock())
					Else
						cLog := STR0087 + cFilFKA + "' " + STR0088 + cIdOrig + "' "//"Não foi possivel localizar o registro na tabela FK5. Filial: '"
						Help( ,,"MF473GRV1",,cLog, 1, 0 )
					EndIf
				Else
					Reclock("SE5", .F.)
						SE5->E5_LA	:= "S"
					SE5->( MsUnlock() )
				EndIf
				
			EndIf
		EndIf
				
		If (__nHdlPrv > 0 .And. __nTotal > 0 ) .And. ( nLinha == Len(__aRecCtb)  .Or. Alltrim(__aRecCtb[nLinha+1][3]) != Alltrim(cFilAnt) )
			//Efetiva Lancamento Contabil
			RodaProva( __nHdlPrv, __nTotal)
		
			cA100Incl(	__cArquivo,;
						__nHdlPrv,;
						3 /*nOpcx*/,;
						__cLote,;
						lDigita,;
						lAglutina,;
						/*cOnLine*/,;
						/*dData*/,;
						/*dReproc*/,;
						@__aFlagCTB,;
						/*aDadosProva*/,;
						/*aDiario*/ )
			
			__nTotal 		:= 0
			__nHdlPrv 		:= 0
			__aFlagCTB 	:= {}
				
			If nLinha < Len(__aRecCtb) 
				cFilAnt := __aRecCtb[nLinha+1][3]
			EndIf
		EndIf
		
	Next nLinha
EndIf

cFilAnt := cFilX	

FI473IniCTB()

RestArea(aArea)

Return .T.
//-------------------------------------------------------------------
/*/{Protheus.doc} SIFStatus
Realiza a validação de pre linha.

@author	Alvaro Camillo Neto
@since		02/10/2013
@version	MP11.90
		
/*/
//-------------------------------------------------------------------
Static Function SIFStatus(cProcesso,cFilSIG)
Local cStatus  := "1"
Local cQuery   := ""
Local cTabSIF  := "SIFCONTA"
Local nTotal   := 0
Local nNaoConc := 0

Default cFilSIG := xFilial("SIG")

cQuery := " "
cQuery += " SELECT "
cQuery += "     COUNT(*) SIGCONT "
cQuery += " FROM "+RetSQLName("SIG")+" SIG "
cQuery += " WHERE "
cQuery += "     IG_FILIAL = '"+cFilSIG+"'  AND "
cQuery += "     IG_IDPROC = '"+cProcesso+"'        AND "
cQuery += "     SIG.D_E_L_E_T_ = ' ' "
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSIF,.T.,.T.)

If (cTabSIF)->(!EOF())
	nTotal := (cTabSIF)->SIGCONT
EndIf
(cTabSIF)->(dbCloseArea())

cQuery := " "
cQuery += " SELECT "
cQuery += "     COUNT(*) SIGCONT "
cQuery += " FROM "+RetSQLName("SIG")+" SIG "
cQuery += " WHERE "
cQuery += "     IG_FILIAL = '"+cFilSIG+"'  AND "
cQuery += "     IG_IDPROC = '"+cProcesso+"'        AND "
cQuery += "     IG_STATUS = '1'        		AND "
cQuery += "     SIG.D_E_L_E_T_ = ' ' "
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSIF,.T.,.T.)

If (cTabSIF)->(!EOF())
	nNaoConc := (cTabSIF)->SIGCONT
EndIf
(cTabSIF)->(dbCloseArea())

If nNaoConc == 0 // Totalmente conciliado
	cStatus := '3'
ElseIf nNaoConc < nTotal // Conciliado Parcialmente
	cStatus := '2'
EndIf

Return cStatus

//-------------------------------------------------------------------
/*/{Protheus.doc} F473LinePre
Realiza a validação de pre linha.

@author	Alvaro Camillo Neto
@since		02/10/2013
@version	MP11.90
		
/*/
//-------------------------------------------------------------------

Static Function F473LinePre()
Local lRet := __lConManual

If !lRet
	Help(" ",1,"FIN473ALINPRE",,STR0011, 1, 0 ) //"Não é possível a edição da linha"
EndIf


Return lRet 

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473ACTMD
Realiza a validação do modelo de dados do MVC antes de iniciar a rotina

@author	Alvaro Camillo Neto
@since		02/10/2013
@version	MP11.90
		
/*/
//-------------------------------------------------------------------
Static Function FI473ACTMD(oModel,lFirst)
Local aSaveLines:= FWSaveRows()
Local oMdCab	:= oModel:GetModel("CONMASTER")
Local oMdItem	:= oModel:GetModel("CONDETAIL")
Local oMdTotRec	:= oModel:GetModel("TOTREC")
Local oMdTotPag	:= oModel:GetModel("TOTPAG")
Local oMdTotSal	:= oModel:GetModel("TOTSAL")
Local nLinha	:= 0
Local nItErro	:= 0
Local lRet		:= .T.
Local cBanco	:= oMdCab:GetValue("BANCO")
Local cAgencia	:= oMdCab:GetValue("AGENCIA")
Local cConta	:= oMdCab:GetValue("CONTA")
Local dDataIni	:= oMdCab:GetValue("DATADE")
Local dDataFim  := oMdCab:GetValue("DATAATE")
Local aSaldos	:= {}

Local aTotRec := {}
Local aTotPag := {}
Local aTotSal := {}

Default lFirst := .F.

aAdd(aTotRec,{STR0012,0})//"Documentos a Conciliar"
aAdd(aTotRec,{STR0013,0})//"Valor a Conciliar"
aAdd(aTotRec,{STR0014,0})//"Documentos Conciliados"
aAdd(aTotRec,{STR0015,0})//"Valor Conciliado"


aAdd(aTotPag,{STR0012,0})//"Documentos a Conciliar"
aAdd(aTotPag,{STR0013,0})//"Valor a Conciliar"
aAdd(aTotPag,{STR0014,0})//"Documentos Conciliados"
aAdd(aTotPag,{STR0015,0})//"Valor Conciliado"

aAdd(aTotSal,{STR0016,0})//"Saldo Anterior(Bancário) "
aAdd(aTotSal,{STR0017,0})//"Saldo Anterior(Reconciliado)"
aAdd(aTotSal,{STR0018,0})//"Saldo Atual(Bancário) "
aAdd(aTotSal,{STR0019,0})//"Saldo Atual(Reconciliado)"

For nLinha := 1 to oMdItem:Length()
	oMdItem:GoLine( nLinha )
	If !oMdItem:IsDeleted()
		If oMdItem:GetValue("IG_CARTER") == "1" .And. oMdItem:GetValue("IG_STATUS") != "1"
			aTotRec[3][2] += 1 									// Documentos Conciliados
			aTotRec[4][2] += oMdItem:GetValue("IG_VLREXT")		// Valor Conciliado
		ElseIF oMdItem:GetValue("IG_CARTER") == "2" .And. oMdItem:GetValue("IG_STATUS") != "1"
			aTotPag[3][2] += 1 									// Documentos Conciliados
			aTotPag[4][2] += oMdItem:GetValue("IG_VLREXT")		// Valor Conciliado
		EndIf
		
		If oMdItem:GetValue("IG_CARTER") == "1" .And. oMdItem:GetValue("IG_STATUS") == "1"
			aTotRec[1][2] += 1 									// Total de Documentos
			aTotRec[2][2] += oMdItem:GetValue("IG_VLREXT")		// Total Conciliado
		ElseIF oMdItem:GetValue("IG_CARTER") == "2" .And. oMdItem:GetValue("IG_STATUS") == "1"
			aTotPag[1][2] += 1 									// Total de Documentos
			aTotPag[2][2] += oMdItem:GetValue("IG_VLREXT")		// Total Conciliado
		EndIf
	EndIf
Next nLinha

//Carregando o Modelo
If oMdTotRec:Length() < 3
	For nLinha := 1 To Len( aTotRec )
		If nLinha > 1
			// Incluimos uma nova linha de item
			If  ( nItErro := oMdTotRec:AddLine(.T.) ) != nLinha
				lRet    := .F.
				Exit
			EndIf
		EndIf
		oMdTotRec:LoadValue( "TEXTO" , Left(aTotRec[nLinha][1],23) )
		oMdTotRec:LoadValue( "VALOR" , aTotRec[nLinha][2] )
	Next nLinha
Else
	For nLinha := 1 To Len( aTotRec )
		oMdTotRec:GoLine(nLinha)
		oMdTotRec:LoadValue( "TEXTO" , Left(aTotRec[nLinha][1],23) )
		oMdTotRec:LoadValue( "VALOR" , aTotRec[nLinha][2] )
	Next nLinha
EndIf

If oMdTotPag:Length() < 3
	For nLinha := 1 To Len( aTotPag )
		If nLinha > 1
			// Incluimos uma nova linha de item
			If  ( nItErro := oMdTotPag:AddLine(.T.) ) != nLinha
				lRet    := .F.
				Exit
			EndIf
		EndIf
		oMdTotPag:LoadValue( "TEXTO" , Left(aTotPag[nLinha][1],23) )
		oMdTotPag:LoadValue( "VALOR" , aTotPag[nLinha][2] )
	Next nLinha
Else
	For nLinha := 1 To Len( aTotPag )
		oMdTotPag:GoLine(nLinha)
		oMdTotPag:LoadValue( "TEXTO" , Left(aTotPag[nLinha][1],23) )
		oMdTotPag:LoadValue( "VALOR" , aTotPag[nLinha][2] )
	Next nLinha
EndIf

If oMdTotSal:Length() < 4
	//Saldos
	aSaldos := FI473GetSal(cBanco,cAgencia,cConta,dDataIni,dDataFim)
	aTotSal[1][2] := aSaldos[1]
	aTotSal[2][2] := aSaldos[2]
	aTotSal[3][2] := aSaldos[3]
	aTotSal[4][2] := aSaldos[4]
	For nLinha := 1 To Len( aTotSal )
		If nLinha > 1
			// Incluimos uma nova linha de item
			If  ( nItErro := oMdTotSal:AddLine(.T.) ) != nLinha
				lRet    := .F.
				Exit
			EndIf
		EndIf
		oMdTotSal:LoadValue( "TEXTO" , Left(aTotSal[nLinha][1],28) )
		oMdTotSal:LoadValue( "VALOR" , aTotSal[nLinha][2] )
	Next nLinha
EndIf
		

FWRestRows(aSaveLines)

If lFirst
	oMdItem:GoLine(1)
EndIf

oMdTotRec:GoLine(1)
oMdTotPag:GoLine(1)
oMdTotSal:GoLine(1)

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473GetSal()
Retorna os saldos da conta contábil.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function FI473GetSal(cBanco,cAgencia,cConta,dDataIni,dDataFim) 
Local aSaldo 	:= {0,0,0,0}
Local cQuery 	:= ""
Local dDataAnt	:= CTOD("")
Local dDataAtu	:= CTOD("")
Local cTabSal   := "SALCONTRB"

SE8->(dbSetOrder(1))//E8_FILIAL+E8_BANCO+E8_AGENCIA+E8_CONTA+DTOS(E8_DTSALAT)

//Ultimo saldo anterior a data inicial
cQuery := ""
cQuery += " SELECT "
cQuery += "     MAX(E8_DTSALAT) E8_DTSALAT "
cQuery += " FROM "+RetSQLName("SE8")+" SE8 "
cQuery += " WHERE "
cQuery += "     E8_FILIAL = '"+xFilial("SE8")+"'  AND "
cQuery += "     E8_BANCO = '"+cBanco+"'        AND "
cQuery += "     E8_AGENCIA = '"+cAgencia+"'     AND "
cQuery += "     E8_CONTA = '"+cConta+"' AND "
cQuery += "     E8_DTSALAT < '"+DTOS(dDataIni)+"' AND "
cQuery += "     SE8.D_E_L_E_T_ = ' ' "
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSal,.T.,.T.)

If (cTabSal)->(!EOF())
	dDataAnt := STOD((cTabSal)->E8_DTSALAT)
EndIf
(cTabSal)->(dbCloseArea())

cQuery := ""
cQuery += " SELECT "
cQuery += "     MAX(E8_DTSALAT) E8_DTSALAT "
cQuery += " FROM "+RetSQLName("SE8")+" SE8 "
cQuery += " WHERE "
cQuery += "     E8_FILIAL = '"+xFilial("SE8")+"'  AND "
cQuery += "     E8_BANCO = '"+cBanco+"'        AND "
cQuery += "     E8_AGENCIA = '"+cAgencia+"'     AND "
cQuery += "     E8_CONTA = '"+cConta+"' AND "
cQuery += "     E8_DTSALAT <= '"+DTOS(dDataFim)+"' AND "
cQuery += "     SE8.D_E_L_E_T_ = ' ' "
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSal,.T.,.T.)

If (cTabSal)->(!EOF())
	dDataAtu := STOD((cTabSal)->E8_DTSALAT)
EndIf
(cTabSal)->(dbCloseArea())

If SE8->(dbSeek(xFilial("SE8") + cBanco + cAgencia + cConta + DTOS(dDataAnt)  ))
	aSaldo[1] := SE8->E8_SALATUA
	aSaldo[2] := SE8->E8_SALRECO
EndIf

If SE8->(dbSeek(xFilial("SE8") + cBanco + cAgencia + cConta + DTOS(dDataAtu)  ))
	aSaldo[3] := SE8->E8_SALATUA
	aSaldo[4] := SE8->E8_SALRECO
EndIf

Return aSaldo


//-------------------------------------------------------------------
/*/{Protheus.doc} MontaSCab
Retorna estrutura do tipo FWformModelStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static function MontaSCab()

Local oStruct := FWFormModelStruct():New()

oStruct:AddTable('CABCON',{'FILIAL', 'BANCO'},STR0024)//'Cabecalho Conciliacao'

oStruct:AddField(STR0020,STR0021 , 'FILIAL', 'C',TamSx3("A6_FILIAL")[1],,,,,,,.T. )//'Filial'##"Filial do Sistema"
oStruct:AddField(STR0022,STR0023 , 'BANCO', 'C',TamSx3("A6_COD")[1],,,,,,,.T.,.F. )//'Banco'##'Banco Conciliacao'
oStruct:AddField(STR0025,STR0026 , 'AGENCIA', 'C',TamSx3("A6_AGENCIA")[1],,,,,,,.T.,.F. )//'Agencia'##'Agencia Conciliação'
oStruct:AddField(STR0027,STR0028 , 'CONTA', 'C',TamSx3("A6_NUMCON")[1],,,,,,,.T.,.F. )//'Conta'##'Conta Conciliação'
oStruct:AddField(STR0029,STR0029 , 'DATADE', 'D',8 )//'Data De'
oStruct:AddField(STR0030,STR0030 , 'DATAATE', 'D',8 )//'Data Até'
oStruct:AddField(STR0030,STR0030 , 'AGLUTINA', 'C',1,,,,{STR0031, STR0032} )//'Aglut Lanc'##'1=Sim'
oStruct:AddField(STR0033,STR0033 , 'MOSTRACTB', 'C',1,,,,{STR0031, STR0032} )//'Mostra Lanc'
oStruct:AddField(STR0034,STR0034 , 'CTBONLINE', 'C',1,,,,{STR0031, STR0032} )//'Contb On Line' 
oStruct:AddField("Seleciona Filial","Seleciona Filial" , 'SELFIL', 'C',1,,,,{STR0031, STR0032} )//'Contb On Line' 


Return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} MontaSRec
Retorna estrutura do tipo FWformModelStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function MontaSRec()

Local oStruct := FWFormModelStruct():New()

oStruct:AddTable('REC',,STR0035)//'Total de Recebimentos'
oStruct:AddField(STR0020,STR0021 , 'FILIAL', 'C',TamSx3("A6_FILIAL")[1],,,,,,,.T. )//'Filial'##"Filial do Sistema"
oStruct:AddField(STR0022,STR0023 , 'BANCO', 'C',TamSx3("A6_COD")[1],,,,,,,.T.,.F. )//'Banco'##'Banco Conciliacao'
oStruct:AddField(STR0036,STR0036 , 'TEXTO', 'C',23 )//'Titulo'
oStruct:AddField(STR0037,STR0037 , 'VALOR', 'N',16,2 )//'Valor'

Return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} MontaSPag
Retorna estrutura do tipo FWformModelStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function MontaSPag()

Local oStruct := FWFormModelStruct():New()

oStruct:AddTable('PAG',,STR0038)//'Total Pagamentos'
oStruct:AddField(STR0020,STR0021 , 'FILIAL', 'C',TamSx3("A6_FILIAL")[1],,,,,,,.T. )//'Filial'##"Filial do Sistema"
oStruct:AddField(STR0022,STR0023 , 'BANCO', 'C',TamSx3("A6_COD")[1],,,,,,,.T.,.F. )//'Banco'##'Banco Conciliacao'
oStruct:AddField(STR0036,STR0036 , 'TEXTO', 'C',23 )//'Titulo'
oStruct:AddField(STR0037,STR0037 , 'VALOR', 'N',16,2 )//'Valor'

Return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} MontaSSal
Retorna estrutura do tipo FWformModelStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function MontaSSal()

Local oStruct := FWFormModelStruct():New()

oStruct:AddTable('SAL',,STR0039)//'Total Saldo'
oStruct:AddField(STR0020,STR0021 , 'FILIAL', 'C',TamSx3("A6_FILIAL")[1],,,,,,,.T. )//'Filial'##"Filial do Sistema"
oStruct:AddField(STR0022,STR0023 , 'BANCO', 'C',TamSx3("A6_COD")[1],,,,,,,.T.,.F. )//'Banco'##'Banco Conciliacao'
oStruct:AddField(STR0036,STR0036 , 'TEXTO', 'C',28 )//'Titulo'
oStruct:AddField(STR0037,STR0037 , 'VALOR', 'N',16,2 )//'Valor'

Return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473LCab
Função que retorna a carga de dados do cabeçalho da conciliação

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function  FI473LCab(oModel)
Local aRet		:= {}
Local aAux		:= {}

Pergunte("FINA473",.F.)

aAdd(aAux,xFilial("SIG"))
aAdd(aAux,MV_PAR01)
aAdd(aAux,MV_PAR02)
aAdd(aAux,MV_PAR03)
aAdd(aAux,MV_PAR04)
aAdd(aAux,MV_PAR05)
aAdd(aAux,cValtoChar(MV_PAR06))
aAdd(aAux,cValtoChar(MV_PAR07))
aAdd(aAux,cValtoChar(MV_PAR08))
aAdd(aAux,cValtoChar(MV_PAR09))

aRet := {aAux,0}

Return aRet

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473LItem
Função que retorna a carga de dados dos movimentos da conciliação

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

static function  FI473LItem(oModelItem)
Local aItConc		:= {}
Local aAux 			:= {}
Local cBanco  		:= ""
Local cAgencia 		:= ""
Local cConta   		:= ""
Local dDataDe 		:= cTod("")
Local dDataAte		:= cTod("")
Local lAglutina		:= .F.
Local lMostra  		:= .F.
Local lCtbOnline	:= .F.
Local aCpoSIG		:= {}
Local aArea			:= GetArea()
Local nSeqDig		:= 0
Local nY			:= 0
Local nPosCor 		:= 0
Local nPosStatus 	:= 0
Local nPosSeq 		:= 0
Local aFields		:= oModelItem:GetStruct():GetFields()
Local cStatus		:= ""
Local cItem			:= ""
Local nPosRec		:= 0
Local aAreaSE5		:= SE5->(GetArea())
Local nPosSeqCon	:= 0
Local cFilX			:= ""

Pergunte("FINA473",.F.)

cBanco  		:= MV_PAR01
cAgencia 		:= MV_PAR02
cConta   		:= MV_PAR03
dDataDe 		:= MV_PAR04
dDataAte		:= MV_PAR05
lAglutina		:= MV_PAR06 == 1
lMostra  		:= MV_PAR07 == 1
lCtbOnline		:= MV_PAR08 == 1

// Posição no Array - Atenção a ordem deve ser a mesma do model
For nY := 1 to Len(aFields)
	aAdd(aCpoSIG, Alltrim(aFields[nY][3]) )
Next nY

//Retorna os movimentos do extrato
FI473CSIG(@aItConc,aCpoSIG,cBanco,cAgencia,cConta,dDataDe,dDataAte)

//Retorna os movimentos do SE5
FI473CSE5(@aItConc,aCpoSIG,cBanco,cAgencia,cConta,dDataDe,dDataAte)

SE5->(DbSetOrder(20)) //E5_FILIAL+E5_SEQCON

nPosCor 	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "COR" } )
nPosStatus 	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_STATUS" } )
nPosSeq 	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "SEQDIG" } )
nPosRec		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "RECSE5" } )
nPosSeqCon	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_SEQMOV" } )

For nY := 1 to Len(aItConc)
	nSeqDig++
	
	cStatus := aItConc[nY][2][nPosStatus]
	aItConc[nY][2][nPosCor] := F473COR(cStatus)	
	aItConc[nY][2][nPosSeq] := cValToChar(nSeqDig)
	
	If Empty(aItConc[nY][2][nPosRec]) 
		aItConc[nY][2][nPosRec] := F473SE5Rec(aItConc[nY][2][nPosSeqCon])
	EndIf
	

Next nY

RestArea(aAreaSE5)
RestArea(aArea)

Return aItConc


//-------------------------------------------------------------------
/*/{Protheus.doc} FI473CSIG
Função que busca os dados do Extrato e dos registros já conciliados

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FI473CSIG(aRet,aCpoSIG,cBanco,cAgencia,cConta,dDataDe,dDataAte)

Local aAux 			:= {}
Local lAglutina		:= .F.
Local lMostra  		:= .F.
Local lCtbOnline	:= .F.
Local cQuery		:= ""
Local cTabSIG   	:= "SIGCONTRB"
Local aStru			:= {}
Local nX			:= 0
Local cCampo		:= ""
Local cCpoIGE5		:= ""
Local aArea			:= GetArea()
Local cTmpSIGFil	:= ""
Local cTipoCH		:= IIF(Type("MVCHEQUES")== "C",MVCHEQUES,MVCHEQUE)
Local cSA6Emp	 := FWModeAccess("SA6",1)
Local cSA6UNe	 := FWModeAccess("SA6",2)
Local cSA6Fil	 := FWModeAccess("SA6",3)

//Movimentos de Extratos não conciliados
cQuery +=     " SELECT  DISTINCT "   + CRLF
cQuery +=     " IG_FILIAL ,"   + CRLF
cQuery +=     " IG_IDPROC ,"   + CRLF
cQuery +=     " IG_ITEM   ,"   + CRLF
cQuery +=     " IG_DTEXTR ,"   + CRLF
cQuery +=     " IG_AGEEXT ,"   + CRLF
cQuery +=     " IG_CONEXT ,"   + CRLF
cQuery +=     " IG_DOCEXT ,"   + CRLF
cQuery +=     " IG_VLREXT ,"   + CRLF
cQuery +=     " IG_HISTEXT,"   + CRLF
cQuery +=     " IG_TIPEXT ,"   + CRLF
cQuery +=     " IG_CARTER ,"   + CRLF
cQuery +=     " IG_DTMOVI ,"   + CRLF
cQuery +=     " IG_AGEMOV ,"   + CRLF
cQuery +=     " IG_CONMOV ,"   + CRLF
cQuery +=     " IG_DOCMOV ,"   + CRLF
cQuery +=     " IG_VLRMOV ,"   + CRLF
cQuery +=     " IG_HISMOV ,"   + CRLF
cQuery +=     " IG_NATMOV ,"   + CRLF
cQuery +=     " IG_SEQMOV ,"   + CRLF
cQuery +=     " IG_STATUS ,"   + CRLF
cQuery +=     " IG_EFETIVA,"   + CRLF
cQuery +=     " IF_BANCO BANCO, 	"   + CRLF
cQuery +=     " COALESCE(E5_RECONC,'') RECONC, 	"   + CRLF
cQuery +=     " IG_FILORIG 	"   + CRLF

If __lFA473Co
	cQuery +=     " , " + __aRetE5E1[1][2] + ", " + CRLF 
	cQuery +=     "   " + __aRetE5E1[2][2] + "  " + CRLF
Endif

cQuery += " FROM "+RetSQLName("SIG") +" SIG		"   + CRLF

cQuery += " INNER JOIN "+RetSQLName("SIF") +" SIF ON	"   + CRLF
cQuery +=      " IF_FILIAL = IG_FILIAL AND	"   + CRLF
cQuery +=      " IF_IDPROC = IG_IDPROC AND " + CRLF
cQuery +=      " IF_BANCO = '"+cBanco+"' AND "    + CRLF
cQuery +=      " SIF.D_E_L_E_T_ = ' '	"   + CRLF

cQuery += " LEFT  JOIN " + RetSQLName("SE5") + " SE5 ON	" + CRLF

If __lFA473Co
	cQuery += 	 " " + __aRetE5E1[2][2] + " = " + __aRetE5E1[1][2] + " AND " + CRLF
Endif

cQuery += 		 " E5_DTDISPO = IG_DTEXTR AND " + CRLF
cQuery += 		 " E5_BANCO = '" + cBanco + "' AND " + CRLF
cQuery += 		 " E5_AGENCIA = '" + cAgencia + "' AND " + CRLF
cQuery += 		 " E5_CONTA   = '" + cConta + "' AND " + CRLF
cQuery += 		 " E5_SITUACA <> 'C' AND " + CRLF
												  
cQuery += 		 " E5_TIPODOC NOT IN " + FormatIn("BA/DC/JR/MT/CM/D2/J2/M2/C2/V2/CP/TL","/") + " AND " + CRLF
cQuery += 		 " E5_VALOR = IG_VLREXT AND " + CRLF
cQuery += 		 "(E5_MOEDA NOT IN " + FormatIn("C1/C2/C3/C4/C5/CH","/") + " OR (E5_MOEDA IN " + FormatIn("C1/C2/C3/C4/C5/CH","/") + " AND E5_NUMCHEQ <> ' ')) AND "
cQuery += 		 "(E5_NUMCHEQ <> '*' OR (E5_NUMCHEQ = '*' AND E5_RECPAG <> 'P')) AND "   + CRLF
cQuery += 		 "((E5_TIPODOC  IN "+ FormatIn(cTipoCH,"|") + "AND  E5_DTDISPO BETWEEN  '" + DTOS(dDataDe)+ "' AND '"  + DTOS(dDataAte) +"' ) OR "   + CRLF
cQuery += 		 "(E5_TIPODOC   NOT IN "+ FormatIn(cTipoCH,"|") + "AND  E5_DTDISPO BETWEEN  '" + DTOS(dDataDe)+ "' AND '"  + DTOS(dDataAte) +"' )) AND "   + CRLF
cQuery += 		 "(E5_NUMCHEQ <> '*' OR (E5_NUMCHEQ = '*' AND E5_RECPAG <> 'P')) AND "   + CRLF

cQuery += " SE5.D_E_L_E_T_ = ' ' "     + CRLF
 
cQuery += " WHERE			"
If cSA6Emp ==  "E" .And. cSA6UNe == "E" .And. cSA6Fil == "E"
	cQuery +=    " IG_FILIAL " + GetRngFil( __aSelFil, "SIG", .T., @cTmpSIGFil ) + " AND " + CRLF
EndIf
cQuery +=    " IG_AGEEXT = '"+cAgencia+"' AND	"   + CRLF
cQuery +=    " IG_CONEXT = '"+cConta+"' AND "   + CRLF
cQuery +=    " IG_DTEXTR >= '"+DTOS(dDataDe)+"' AND	"   + CRLF
cQuery +=    " IG_DTEXTR <= '"+DTOS(dDataAte)+"' AND "   + CRLF
cQuery +=    " SIG.D_E_L_E_T_ = ' '	"  + CRLF
cQuery +=    " ORDER BY "   + CRLF
cQuery +=     " IG_FILIAL , "   + CRLF
cQuery +=     " BANCO  ,	"   + CRLF
cQuery +=     " IG_AGEEXT , "   + CRLF
cQuery +=     " IG_CONEXT , "   + CRLF
cQuery +=     " IG_DTEXTR , "   + CRLF
cQuery +=     " IG_VLREXT "   + CRLF

cQuery := ChangeQuery(cQuery)

aAdd(__aTmpFil, cTmpSIGFil )

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSIG,.T.,.T.)

aStru := SIG->(dbStruct())

For nX :=  1 To Len(aStru)
	If aStru[nX][2] <> "C" .And. SIG->(FieldPos(aStru[nX][1])) > 0
		TcSetField(cTabSIG,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
	EndIf
Next nX

While (cTabSIG)->(!EOF())
	aAux := Nil
	aAux := Array(Len(aCpoSIG))
	aAdd(aAux,"")

	For nX := 1 to Len(aCpoSIG)
		If !( aCpoSIG[nX] $ ("COR/SEQDIG/RECSE5/DESCONC/IG_TIPMOV/IG_TIPDSC/IG_USERLGI") )
			cCampo   := aCpoSIG[nX]
			If cCampo == 'IG_STATUS' .AND. !Empty((cTabSIG)->RECONC) // Caso o movimento tenha sido Reconciliado anteriormente
				aAux[nX] := '4'
			Else
				aAux[nX] := (cTabSIG)->&(cCampo)
			EndIf
		ElseIf  Alltrim(aCpoSIG[nX]) == "RECSE5"
			aAux[nX] := 0
		ElseIf  Alltrim(aCpoSIG[nX]) == "IG_TIPMOV"
			aAux[nX] :=  GetAdvFVal("SEJ","EJ_OCORSIS", xFilial("SEJ",(cTabSIG)->IG_FILORIG) + (cTabSIG)->BANCO + (cTabSIG)->IG_TIPEXT ,1)
		ElseIf  Alltrim(aCpoSIG[nX]) == "IG_TIPDSC"
			aAux[nX] :=  GetAdvFVal("SEJ","EJ_DESCR", xFilial("SEJ",(cTabSIG)->IG_FILORIG) + (cTabSIG)->BANCO + (cTabSIG)->IG_TIPEXT ,1)
		Else
			aAux[nX] := ""
		EndIf
	Next nX
	
	aAdd(aRet,{0 ,aAux })

	(cTabSIG)->(dbSkip())
EndDo

(cTabSIG)->(dbCloseArea())

RestArea(aArea)
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473CSE5
Função que busca os dados do Extrato e dos registros já conciliados

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FI473CSE5(aRet,aCpoSIG,cBanco,cAgencia,cConta,dDataDe,dDataAte,nSeqDig)

Local aAux 			:= {}
Local lAglutina		:= .F.
Local lMostra  		:= .F.
Local lCtbOnline	:= .F.
Local cQuery		:= ""
Local cTabSE5   	:= "SE5CONTRB"
Local aStru			:= {}
Local nX			:= 0
Local aArea			:= GetArea()
Local cCampo		:= ""
Local cChave  		:= ""
Local aCpoSE5		:= {}
Local nPos			:= 0
Local cCampoSIG		:= ""
Local cItem			:= ""
Local nPosSIGPE		:= 0

Local nSIGAge		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_AGEEXT" } )
Local nSIGConta		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_CONEXT" } )
Local nSIGNum		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_DOCEXT" } )
Local nSIGData		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_DTEXTR" } )
Local nSIGValor		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_VLREXT" } )
Local nSIGDeb		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_CARTER" } )
Local nSIGRecNo		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "RECSE5"    } )
Local nSIGPEn		:= 0		

Local nSE5Age		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_AGEMOV" } )
Local nSE5Conta		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_CONMOV" } )
Local nSE5Num		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_DOCMOV" } )
Local nSE5Data		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_DTMOVI" } )
Local nSE5Valor		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_VLRMOV" } )
Local nSE5Deb		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_CARTER" } )
Local nSE5RecNo		:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "RECSE5"    } )
Local nSE5PEn		:= 0

Local nPosStatus 	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_STATUS" } )

Local nPosSIG		:= 0
Local cTipoCH		:= IIF(Type("MVCHEQUES")== "C",MVCHEQUES,MVCHEQUE)
Local cTmpSE5Fil	:= ""
Local nPosE5		:= 0
Local cSA6Emp	 := FWModeAccess("SA6",1)
Local cSA6UNe	 := FWModeAccess("SA6",2)
Local cSA6Fil	 := FWModeAccess("SA6",3)

If __lFA473Co
	nSIGPEn	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == __aRetE5E1[1][2]    } )	
	nSE5PEn	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == __aRetE5E1[2][2]    } )
Endif

aAdd(aCpoSE5, {"IG_FILIAL","E5_FILIAL" } )
aAdd(aCpoSE5, {"IG_CARTER","E5_RECPAG" } )
aAdd(aCpoSE5, {"IG_DTMOVI","E5_DTDISPO"} )
aAdd(aCpoSE5, {"BANCO"    ,"E5_BANCO"  } )
aAdd(aCpoSE5, {"IG_AGEMOV","E5_AGENCIA"} )
aAdd(aCpoSE5, {"IG_CONMOV","E5_CONTA"  } )
aAdd(aCpoSE5, {"IG_DOCMOV","E5_NUMCHEQ"} )
aAdd(aCpoSE5, {"IG_VLRMOV","E5_VALOR"  } )
aAdd(aCpoSE5, {"IG_HISMOV","E5_HISTOR" } )

If __lFA473Co
	aAdd(aCpoSE5, {__aRetE5E1[1][2],__aRetE5E1[2][2]} )
Endif

cChave := "E5_FILIAL+E5_BANCO+E5_AGENCIA+E5_CONTA+DTOS(E5_DTDISPO)"

cQuery += 	  " SELECT      "   + CRLF
cQuery +=     " E5_FILIAL , "   + CRLF
cQuery +=     " E5_RECPAG , "   + CRLF
cQuery +=     " E5_DTDISPO,	"   + CRLF
cQuery +=     " E5_BANCO  , "   + CRLF
cQuery +=     " E5_AGENCIA,	"   + CRLF
cQuery +=     " E5_CONTA  ,	"   + CRLF
cQuery +=     " E5_NUMCHEQ,	"   + CRLF
cQuery +=     " E5_VALOR  ,	"   + CRLF
cQuery +=     " E5_HISTOR ,	"   + CRLF
cQuery +=     " E5_MOTBX  ,	"   + CRLF
cQuery +=     " E5_TIPODOC,	"   + CRLF
cQuery +=     " E5_PREFIXO, "   + CRLF
cQuery +=     " E5_NUMERO , "   + CRLF
cQuery +=     " E5_PARCELA, "   + CRLF
cQuery +=     " E5_TIPO   , "   + CRLF
cQuery +=     " E5_CLIFOR , "   + CRLF
cQuery +=     " E5_LOJA   , "   + CRLF
cQuery +=     " E5_SEQ    , "   + CRLF
cQuery +=     " SE5.R_E_C_N_O_ RECONSE5 ,   "   + CRLF
cQuery +=     " E5_NUMCHEQ   "   + CRLF

If __lFA473Co
	cQuery +=     " , " + __aRetE5E1[2][2] + "  " + CRLF
Endif

cQuery += " FROM " + RetSqlName("SE5") + " SE5 " + CRLF
cQuery += " WHERE " + CRLF
If ( cSA6Emp <>  "C" .Or. cSA6UNe <> "C" .Or. cSA6Fil <> "C") .Or. mv_par09 == 1    
	cQuery += "     E5_FILIAL " + GetRngFil( __aSelFil, "SE5", .T., @cTmpSE5Fil ) + " AND " + CRLF
EndIf
cQuery += 		 " E5_DTDISPO >= '" + DTOS(dDataDe) + "' AND " + CRLF
cQuery += 		 " E5_DTDISPO <= '" + DTOS(dDataAte) + "' AND " + CRLF
cQuery += 		 " E5_BANCO = '" + cBanco + "' AND " + CRLF
cQuery += 		 " E5_AGENCIA = '" + cAgencia + "' AND " + CRLF
cQuery += 		 " E5_CONTA   = '" + cConta + "' AND " + CRLF
cQuery += 		 " E5_SITUACA <> 'C' AND " + CRLF
cQuery += 		 " E5_RECONC = ' ' AND " + CRLF
												  
cQuery += 		 " E5_TIPODOC NOT IN " + FormatIn("BA/DC/JR/MT/CM/D2/J2/M2/C2/V2/CP/TL","/") + " AND " + CRLF
cQuery += 		 " E5_VALOR > 0 AND " + CRLF
cQuery += 		 "(E5_MOEDA NOT IN " + FormatIn("C1/C2/C3/C4/C5/CH","/") + " OR (E5_MOEDA IN " + FormatIn("C1/C2/C3/C4/C5/CH","/") + " AND E5_NUMCHEQ <> ' ')) AND "
cQuery += 		 "(E5_NUMCHEQ <> '*' OR (E5_NUMCHEQ = '*' AND E5_RECPAG <> 'P')) AND "   + CRLF
cQuery += 		 "((E5_TIPODOC  IN "+ FormatIn(cTipoCH,"|") + "AND  E5_DTDISPO BETWEEN  '" + DTOS(dDataDe)+ "' AND '"  + DTOS(dDataAte) +"' ) OR "   + CRLF
cQuery += 		 "(E5_TIPODOC   NOT IN "+ FormatIn(cTipoCH,"|") + "AND  E5_DTDISPO BETWEEN  '" + DTOS(dDataDe)+ "' AND '"  + DTOS(dDataAte) +"' )) AND "   + CRLF
cQuery += 		 "(E5_NUMCHEQ <> '*' OR (E5_NUMCHEQ = '*' AND E5_RECPAG <> 'P')) AND "   + CRLF
cQuery += 		 "D_E_L_E_T_ = ' ' " + CRLF
cQuery += 		 "ORDER BY " + SqlOrder(cChave)

cQuery := ChangeQuery(cQuery)

aAdd(__aTmpFil, cTmpSE5Fil )

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSE5,.T.,.T.)

aStru  := SE5->(dbStruct())
For nX :=  1 To Len(aStru)
	If aStru[nX][2] <> "C" .And. SE5->(FieldPos(aStru[nX][1])) > 0
		TcSetField(cTabSE5,aStru[nX][1],aStru[nX][2],aStru[nX][3],aStru[nX][4])
	EndIf
Next nX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicia a leitura do arquivo   ³
//³ de movimentacao do SE5        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While (cTabSE5)->(!(Eof()))

	If !Empty( (cTabSE5)->E5_MOTBX ) .and. !MovBcoBx((cTabSE5)->E5_MOTBX)
		(cTabSE5)->(dbSkip())
		Loop
	EndIF

	cChaveBx := (cTabSE5)->E5_PREFIXO+(cTabSE5)->E5_NUMERO+(cTabSE5)->E5_PARCELA+(cTabSE5)->E5_TIPO+(cTabSE5)->E5_CLIFOR+(cTabSE5)->E5_LOJA+(cTabSE5)->E5_SEQ 
	
	If !(Empty(cChaveBx) .And. SE5->E5_SITUACA $ "E|X|C") .And. TemBxCanc(cChaveBx,,(cTabSE5)->E5_FILIAL)
		(cTabSE5)->( dbskip())
		loop
	EndIf

	If (cTabSE5)->E5_TIPODOC = "CH"    //Emissão de Cheque
		If SEF->(dbSeek((cTabSE5)->E5_FILIAL +(cTabSE5)->E5_BANCO+(cTabSE5)->E5_AGENCIA+(cTabSE5)->E5_CONTA+(cTabSE5)->E5_NUMCHEQ))
			If SEF->EF_IMPRESS = "C"
				(cTabSE5)->(dbSkip())
				Loop
			EndIF
		EndIF
	EndIF

	aAux := Nil
	aAux := Array(Len(aCpoSIG))
	aAdd(aAux,"")
	
	If __lFA473Co
		nPosE5 := aScan(aCpoSIG, { |x| Alltrim(x) == Alltrim(__aRetE5E1[2][2]) } )
	Endif
	
	For nX := 1 to Len(aCpoSIG)
		cCampoSIG := aCpoSIG[nX]
			
		nPos := aScan(aCpoSE5, { | aItem | Alltrim(aItem[1]) == Alltrim(cCampoSIG) } )
		If !( aCpoSIG[nX] $ ("COR/SEQDIG/DESCONC") )
			If nPos > 0
				If Alltrim(aCpoSE5[nPos][2]) == "E5_RECPAG"
					aAux[nX] := IIF((cTabSE5)->E5_RECPAG == "R", "1","2")
				ElseIf __lFA473Co 
					If Alltrim(aCpoSE5[nPos][2]) == Alltrim(__aRetE5E1[2][2])
						aAux[nPosE5] := (cTabSE5)->&(aCpoSE5[nPos][2])
					Else
						aAux[nX] := (cTabSE5)->&(aCpoSE5[nPos][2])
					Endif
				Else
					aAux[nX] := (cTabSE5)->&(aCpoSE5[nPos][2])
				EndIf
			Else
				If SIG->(FieldPos(cCampoSIG)) > 0
					aAux[nX] := CriaVar(cCampoSIG)
				ElseIf Alltrim(cCampoSIG) == "RECSE5"
					aAux[nX] := (cTabSE5)->RECONSE5
				EndIf
			EndIf
		Else
			aAux[nX] := ""
		EndIf
	Next nX
	
	// Tento pre-reconciliacao dentro da
	// Data + Agencia + Conta + Numero + Valor + Tipo
	nPosSIG := aScan( aRet ,{ |aItem| Alltrim(DTOS( aItem[2][nSIGData] )) + Alltrim(aItem[2][nSIGAge])  + Alltrim(aItem[2][nSIGConta]) + Alltrim(aItem[2][nSIGNum])  + Alltrim(STR(aItem[2][nSIGValor])) + Alltrim(aItem[2][nSIGDeb]) ;
	== Alltrim(DTOS( aAux[nSE5Data] ) )    + Alltrim(aAux[nSE5Age])      + Alltrim(aAux[nSE5Conta]  )   + Alltrim(aAux[nSE5Num])      + Alltrim(STR( aAux[nSE5Valor]))    + Alltrim(aAux[nSE5Deb]) .and. Empty(aItem[2][Len(aItem[2])])  } )
	
	If nPosSIG > 0
		If __lFA473Co
			If !Empty(aAux[nSE5PEn])
				nPosSIGPE	:= aScan(aRet, {|x| x[2][nSIGPEn] = aAux[nSE5PEn]})
				If nPosSIGPE > 0
					If aRet[nPosSIGPE][2][nSIGPEN] = aAux[nSE5PEn]
						nPosSIG := nPosSIGPE
						FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"3")
						nPosSIGPE := 0
					Else
						aAdd(aRet,{0 ,aAux })
					Endif
				Else
					aAdd(aRet,{0 ,aAux })
				Endif
			Else
				FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"3")
			Endif
		Else
			FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"3")
		Endif
	Else
		//Tento pre-reconcilizacao por numero + valor + tipo
		nPosSIG := aScan( aRet ,{ |aItem| Alltrim(aItem[2][nSIGAge])  + Alltrim(aItem[2][nSIGConta]) + Alltrim(aItem[2][nSIGNum])  + Alltrim(STR(aItem[2][nSIGValor])) + Alltrim(aItem[2][nSIGDeb]) ;
		== Alltrim(aAux[nSE5Age])      + Alltrim(aAux[nSE5Conta])     + Alltrim(aAux[nSE5Num] )     + Alltrim(STR( aAux[nSE5Valor]))    + Alltrim(aAux[nSE5Deb])  } )
		
		If nPosSIG > 0
			If __lFA473Co
				If !Empty(aAux[nSE5PEn])
					nPosSIGPE	:= aScan(aRet, {|x| x[2][nSIGPEn] = aAux[nSE5PEn]})
					If nPosSIGPE > 0
						If aRet[nPosSIGPE][2][nSIGPEN] = aAux[nSE5PEn]
							nPosSIG := nPosSIGPE
							FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
							nPosSIGPE := 0
						Else
							aAdd(aRet,{0 ,aAux })
						Endif
					Else
						aAdd(aRet,{0 ,aAux })
					Endif
				Else
					FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
				Endif
			Else
				FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
			Endif
		Else
			//Tento pre-reconcilizacao dentro da data + valor + tipo
			nPosSIG := aScan( aRet ,{ |aItem| Alltrim(aItem[2][nSIGAge])  + Alltrim(aItem[2][nSIGConta]) + Alltrim(DTOS( aItem[2][nSIGData] ))  + Alltrim(STR(aItem[2][nSIGValor])) + Alltrim(aItem[2][nSIGDeb]) ;
			== Alltrim(aAux[nSE5Age])      + Alltrim(aAux[nSE5Conta])     + Alltrim(DTOS( aAux[nSE5Data] ))      + Alltrim(STR( aAux[nSE5Valor]))    + Alltrim(aAux[nSE5Deb])  } )
			
			If nPosSIG > 0 
				If aRet[ nPosSig ][ 2 ][ nSE5Recno ] <> 0 .And. aRet[ nPosSig ][ 2 ][ nSE5Recno ] <> aAux[ nSIGRecNo ]
					nPosSIG := aScan( aRet ,{ |aItem| Alltrim(aItem[2][nSIGAge])  + Alltrim(aItem[2][nSIGConta]) + Alltrim(DTOS( aItem[2][nSIGData] ))  + Alltrim(STR(aItem[2][nSIGValor])) + Alltrim(aItem[2][nSIGDeb]) ;
							==        Alltrim(aAux[nSE5Age])      + Alltrim(aAux[nSE5Conta])     + Alltrim(DTOS( aAux[nSE5Data] ))      + Alltrim(STR( aAux[nSE5Valor]))    + Alltrim(aAux[nSE5Deb])  .And. ;
							aItem[ 2 ][ nSE5RecNo ] <> aAux[ nSIGRecNo ] .And. aItem[ 2 ][ nSE5RecNo ] <= 0 } )

					If nPosSIG > 0
						If __lFA473Co
							If !Empty(aAux[nSE5PEn])
								nPosSIGPE	:= aScan(aRet, {|x| x[2][nSIGPEn] = aAux[nSE5PEn]})
								If nPosSIGPE > 0
									If aRet[nPosSIGPE][2][nSIGPEN] = aAux[nSE5PEn]
										nPosSIG := nPosSIGPE
										FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
										nPosSIGPE := 0
									Else
										aAdd(aRet,{0 ,aAux })
									Endif
								Else
									aAdd(aRet,{0 ,aAux })
								Endif
							Else
								FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
							Endif
						Else
							FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
						Endif
					Else
						//Incluo um movimento novo
						aAdd(aRet,{0 ,aAux })
					EndIf
				Else
					If __lFA473Co
						If !Empty(aAux[nSE5PEn])
							nPosSIGPE	:= aScan(aRet, {|x| x[2][nSIGPEn] = aAux[nSE5PEn]})
							If nPosSIGPE > 0
								If aRet[nPosSIGPE][2][nSIGPEN] = aAux[nSE5PEn]
									nPosSIG := nPosSIGPE
									FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
									nPosSIGPE := 0
								Else
									aAdd(aRet,{0 ,aAux })
								Endif
							Else
								aAdd(aRet,{0 ,aAux })
							Endif
						Else
							FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
						Endif
					Else
						FI473Array(@aRet,aAux,nPosSIG,aCpoSIG,"2")
					Endif
				EndIf
			Else
				//Incluo um movimento novo
				aAdd(aRet,{0 ,aAux })
			EndIf
		EndIf
	EndIf
	
	(cTabSE5)->(dbSkip())
	If nPosSIG > 0
		aRet[nPosSIG][2][Len(aRet[nPosSIG][2])]:= 1 
	Endif
	
Enddo

(cTabSE5)->(dbCloseArea())

RestArea(aArea)

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473Array
Função que carrega o array do bload com as informações do SE5

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FI473Array(aSIG,aSE5,nPosSIG,aCpoSIG,cStatus,nRecSE5)

Local aAux			:= {}
Local nX			:= 0
Local cItem			:= ""
Local nPosStatus	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_STATUS" } )
Local nPosSeqMov 	:= aScan(aCpoSIG , {|cItem| Alltrim(cItem) == "IG_SEQMOV" } )
Local cSeqMov		:= aSIG[nPosSIG][2][nPosSeqMov]

For nX:= 1 to Len(aSIG[nPosSIG][2])
	 If Empty(aSIG[nPosSIG][2][nX])
	 	aSIG[nPosSIG][2][nX] := aSE5[nX]  	 	
	 EndIf 	 
Next nX

aSIG[nPosSIG][2][nPosStatus] := cStatus 

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473LRec
Função que retorna a carga de dados da tabela de totalizador

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FI473LRec(oModel)
Local aRet := {}

Pergunte("FINA473",.F.)

aAdd(aRet,{0 ,{ xFilial("SIF") , MV_PAR01, "", 0 } } )

Return aRet

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473LPag
Função que retorna a carga de dados da tabela de totalizador

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FI473LPag(oModel)
Local aRet := {}

Pergunte("FINA473",.F.)

aAdd(aRet,{0 ,{ xFilial("SIF") , MV_PAR01, "", 0 } } )

Return aRet

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473LSal
Função que retorna a carga de dados da tabela de totalizador

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FI473LSal(oModel)
Local aRet := {}

Pergunte("FINA473",.F.)

aAdd(aRet,{0 ,{ xFilial("SIF") , MV_PAR01, "", 0 } } )

Return aRet


//-------------------------------------------------------------------
/*/{Protheus.doc} ViewDef
Definição do interface

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function ViewDef()
Local oView
Local oModel := ModelDef()

Local oStr1:= MontaVCab() 
Local oStr2:= FWFormStruct(2, "SIG")
Local oStr3:= MontaVRec()
Local oStr4:= MontaVPag()
Local oStr5:= MontaVSal()

oView := FWFormView():New()

oView:SetModel(oModel)

oView:AddField('VIEWCONMASTER' , oStr1,'CONMASTER' )
oView:AddGrid('VIEWCONDETAIL' , oStr2,'CONDETAIL')
oView:AddGrid('FORM6' , oStr3,'TOTREC')
oView:AddGrid('FORM8' , oStr4,'TOTPAG')
oView:AddGrid('FORM10' , oStr5,'TOTSAL') 
    
oView:CreateHorizontalBox( 'BOXFORM1', 16)

oStr2:RemoveField( 'IG_STATUS' )
oStr2:RemoveField( 'IG_SEQMOV' )
oStr2:RemoveField( 'IG_NATMOV' )
oStr2:RemoveField( 'IG_ITEM' )
oStr2:RemoveField( 'IG_TIPEXT' )
oStr2:RemoveField( 'IG_FILORIG' )

oStr2:AddField( 'COR'   ,'01','','',, 'BC','@BMP' )
oStr2:AddField( 'SEQDIG','02','','',, 'Get'       )
oStr2:RemoveField( 'IG_IDPROC' )

If __lFA473Co
	oStr2:AddField( __aRetE5E1[2][2], '03','','',,'','@!' )
	
	oStr2:SetProperty( __aRetE5E1[1][2]	, MVC_VIEW_ORDEM,	'12')
	oStr2:SetProperty( __aRetE5E1[2][2]	, MVC_VIEW_ORDEM,	'13')
	oStr2:SetProperty( "IG_HISTEXT"	    , MVC_VIEW_ORDEM,	'14') 
	
	oStr2:SetProperty(__aRetE5E1[2][2]  , MVC_VIEW_TITULO, __aRetE5E1[2][1])
Endif

oStr2:SetProperty('*',MVC_VIEW_CANCHANGE,.F.)

oView:CreateHorizontalBox( 'BOXFORM3', 63)
oView:CreateHorizontalBox( 'BOX5', 21)
oView:CreateVerticalBox( 'BOXFORM6' , 32, 'BOX5')
oView:CreateVerticalBox( 'BOXFORM8' , 32, 'BOX5')
oView:CreateVerticalBox( 'BOXFORM10', 36, 'BOX5')
oView:SetOwnerView('VIEWCONMASTER','BOXFORM1')
oView:SetOwnerView('VIEWCONDETAIL','BOXFORM3')
oView:SetOwnerView('FORM6' ,'BOXFORM6' )
oView:SetOwnerView('FORM8' ,'BOXFORM8' )
oView:SetOwnerView('FORM10','BOXFORM10')


oView:EnableTitleView('VIEWCONMASTER' , STR0040 )//'Parâmetros da Conciliação'
oView:EnableTitleView('VIEWCONDETAIL' , STR0041 )//'Movimentos'
oView:EnableTitleView('FORM6' , STR0042 )//'Recebimentos'
oView:EnableTitleView('FORM8' , STR0043 )//'Pagamentos'
oView:EnableTitleView('FORM10', STR0044 )//'Saldos'

oView:SetViewProperty('FORM6' , 'ENABLENEWGRID' )
oView:SetViewProperty('FORM8' , 'ENABLENEWGRID' )
oView:SetViewProperty('FORM10', 'ENABLENEWGRID' )

oView:SetViewProperty('FORM6' , 'GRIDVSCROLL', {.F.}  )
oView:SetViewProperty('FORM8' , 'GRIDVSCROLL',  {.F.}   )
oView:SetViewProperty('FORM10', 'GRIDVSCROLL',  {.F.}   )

oView:SetAfterViewActivate({|oV| SetConMan(oV) })

oView:AddUserButton( STR0059, 'FORM'  , {|oView| FA473Leg() } ) //'Legenda'
oView:AddUserButton( STR0083, 'PEDIDO', {|oView| FA473Efet(oView) } ) //"Efetivação"
oView:AddUserButton( STR0084, 'PEDIDO', {|oView| FA473CanEfet(oView) } ) //"Cancelar Efetivação"

Return oView

//-------------------------------------------------------------------
/*/{Protheus.doc} SetConMan
Atribui a propriedade doubleclick da grid.
Temporário até sair a propriedade oficial do framework

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function SetConMan(oView)

Local oGridView := oView:GetViewObj('VIEWCONDETAIL')[3]

oGridView:oBrowse:oBrowse:bLDblClick := {|| FA473Marca() }

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FA473Marca
Tela de conciliação Manual

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function FA473Marca()
Local oDlg1
Local nOpca1		:= 0
Local oModel		:= FWModelActive()
Local oView		:= FWViewActive()
Local oModelDet	:= oModel:GetModel("CONDETAIL")
Local cStatus		:= oModelDet:GetValue("IG_STATUS")

Local lRet			:= .T.
LOCAL nSequen 	:= 0
LOCAL lIsBanco 	:= .F.
LOCAL lEfetiva 	:= .F.

Local nTamDet		:= oModelDet:Length()
Local nLinOri		:= oModelDet:GetLine()
Local nLinhaNov	:= 0
Local aSaveLines	:= FWSaveRows()


Local nSeqOri		:= 0
Local cDCOri		:= ""
Local nValOri		:= 0
Local dDataOri	:= cTod("")
Local cNumOri		:= ""
Local cAgeOri		:= ""
Local cCtaOri		:= ""
Local cHistOri	:= ""
Local nRecnoSE5	:= 0

Local nValDes		:= 0
Local dDataDes	:= cTod("")
Local cNumDes		:= ""
Local cAgeDes		:= ""
Local cCtaDes		:= ""
Local cHistDes	:= ""
Local aArea		:= GetArea()
Local aAreaSE5	:= SE5->(GetArea())
Local nSeqDes		:= 0

Local cCor			:= ""
Local lcanok		:= .F.
Local lf473		:= .T.

__lConManual	:= .T.

SE5->(DbSetOrder(20)) //E5_FILIAL+E5_SEQCON

If oModelDet:IsDeleted()
	lRet := .F.
	Help(" ",1,"FIN473MAN",,STR0045, 1, 0 )//"Por favor selecione o registro conciliado."
EndIf

If oModelDet:GetValue("IG_EFETIVA") == '1'
	lRet := .F.
	Help(" ",1,"FIN473MAN1",,STR0082, 1, 0 )//"Para cancelar uma conciliação com um movimento gerado pela rotina de conciliação, utilize a operação - Cancelar Efetivação"
EndIf

If lRet
	If cStatus == "1"   // Se no reconciliado
	
		DEFINE MSDIALOG oDlg1 FROM  69,70 TO 160,331 TITLE STR0047 PIXEL  //"Reconciliacao bancaria Automatica"
	
		@ 0, 2 TO 22, 165 OF oDlg1 PIXEL
		@ 7, 98 MSGET nSequen Picture "9999" VALID (nSequen <= nTamDet) .and. (nSequen > 0) SIZE 20, 10 OF oDlg1 PIXEL
		@ 8, 08 SAY  STR0046  SIZE 90, 7 OF oDlg1 PIXEL //"Sequencia a Reconciliar"
		DEFINE SBUTTON FROM 29, 71 TYPE 1 ENABLE ACTION  (nOpca1:=1,If((nSequen <= nTamDet ) .and. (nSequen > 0) ,oDLg1:End() , nOpca1:=0 ) )  OF oDlg1
		DEFINE SBUTTON FROM 29, 99 TYPE 2 ENABLE ACTION (oDlg1:End()) OF oDlg1
	
		ACTIVATE MSDIALOG oDlg1 CENTERED
	
		If nOpca1 == 1
	
			//Verifica se a linha clicada  Mov. Banco ou Sistema	
			If !Empty(oModelDet:GetValue("IG_VLRMOV")) .And. Empty(oModelDet:GetValue("IG_VLREXT"))
				lIsBanco := .T.
			Endif
			
			nSeqOri := Val(oModelDet:GetValue("SEQDIG") )
			cDCOri	:= oModelDet:GetValue("IG_CARTER")
			nValOri	:= IIF(lIsBanco, oModelDet:GetValue("IG_VLRMOV") , oModelDet:GetValue("IG_VLREXT") )
			dDataOri := IIF(lIsBanco, oModelDet:GetValue("IG_DTMOVI") , oModelDet:GetValue("IG_DTEXTR") )
			cNumOri	:= IIF(lIsBanco, oModelDet:GetValue("IG_DOCMOV"), oModelDet:GetValue("IG_DOCEXT"))
			cAgeOri	:= IIF(lIsBanco, oModelDet:GetValue("IG_AGEMOV") , oModelDet:GetValue("IG_AGEEXT"))
			cCtaOri	:= IIF(lIsBanco, oModelDet:GetValue("IG_CONMOV") , oModelDet:GetValue("IG_CONEXT"))
			cHistOri:= IIF(lIsBanco, oModelDet:GetValue("IG_HISMOV") , oModelDet:GetValue("IG_HISTEXT"))
			nRecnoSE5	:= oModelDet:GetValue("RECSE5")
			oModelDet:GoLine(nSequen)
			
			//Verifica tentativa de reconciliar Banco x Banco ou SE5 x SE5
			//ou Lancamento de Credito x Lancamento Dbito ou vice-versa 
			
			If ( 	( !Empty(oModelDet:GetValue("IG_VLRMOV")) .And.  Empty(oModelDet:GetValue("IG_VLREXT"))  .and. lIsBanco) .or. ;
					(  Empty(oModelDet:GetValue("IG_VLRMOV")) .And. !Empty(oModelDet:GetValue("IG_VLREXT")) .and. !lIsBanco) .or. ;
					oModelDet:GetValue("IG_CARTER") != cDCOri )
				Help(" ",1,"NORECONC")
				lRet := .F.
			Endif
			
			If lRet .And. (IIf(lIsBanco , oModelDet:GetValue("IG_VLREXT") != nValOri , oModelDet:GetValue("IG_VLRMOV") != nValOri))
				Help(" ",1,"NORECONC")
				lRet := .F.
			Endif
			
			//Movimento Extrato
			If lRet .And.  !lIsBanco
			
				nValDes		:= oModelDet:GetValue("IG_VLRMOV")
				dDataDes 		:= oModelDet:GetValue("IG_DTMOVI")
				cNumDes		:= oModelDet:GetValue("IG_DOCMOV")
				cAgeDes		:= oModelDet:GetValue("IG_AGEMOV")
				cCtaDes		:= oModelDet:GetValue("IG_CONMOV")
				cHistDes		:= oModelDet:GetValue("IG_HISMOV")
				nRecnoSE5		:= oModelDet:GetValue("RECSE5")
				
				oModelDet:DeleteLine()
				oModelDet:GoLine(nLinOri)
				
				oModelDet:LoadValue("IG_VLRMOV",nValDes)
				oModelDet:LoadValue("IG_DTMOVI",dDataDes)
				oModelDet:LoadValue("IG_DOCMOV",cNumDes)
				oModelDet:LoadValue("IG_AGEMOV",cAgeDes)
				oModelDet:LoadValue("IG_CONMOV",cCtaDes)
				oModelDet:LoadValue("IG_STATUS","3")
				cCor := F473COR("3")
				oModelDet:LoadValue("COR",cCor)
				oModelDet:LoadValue("RECSE5",nRecnoSE5)
				oModelDet:LoadValue("IG_HISMOV",cHistDes)
				oModelDet:LoadValue("DESCONC","")
			ElseIf lRet
			
				oModelDet:LoadValue("IG_VLRMOV",nValOri)
				oModelDet:LoadValue("IG_DTMOVI",dDataOri)
				oModelDet:LoadValue("IG_DOCMOV",cNumOri)
				oModelDet:LoadValue("IG_AGEMOV",cAgeOri)
				oModelDet:LoadValue("IG_CONMOV",cCtaOri)
				cCor := F473COR("3")
				oModelDet:LoadValue("IG_STATUS","3")
				oModelDet:LoadValue("COR",cCor)
				oModelDet:LoadValue("RECSE5",nRecnoSE5)
				oModelDet:LoadValue("IG_HISMOV",cHistOri)
				oModelDet:LoadValue("DESCONC","")
				
				oModelDet:GoLine(nLinOri)
				oModelDet:DeleteLine()
		
			Endif
		Endif
	Else
		lEfetiva := .F.
		DEFINE MSDIALOG oDlg1 FROM  69,70 TO 160,331 TITLE  STR0047 PIXEL  //"Reconciliacao bancaria Automatica"
		@  0, 2 TO 22, 128 OF oDlg1	PIXEL
		@  7.5,  9 SAY  STR0048  SIZE 115, 7 OF oDlg1 PIXEL  //"Esta movimentacao ja se encontra reconciliada"
		@ 14  ,  9 SAY  STR0049  SIZE 100, 7 OF oDlg1 PIXEL  //"             Deseja cancelar ?               "
		DEFINE SBUTTON FROM 29, 71 TYPE 1 ENABLE ACTION (nOpca1:=1,oDlg1:End()) OF oDlg1
		DEFINE SBUTTON FROM 29, 99 TYPE 2 ENABLE ACTION (oDlg1:End()) OF oDlg1
	
		ACTIVATE MSDIALOG oDlg1 CENTERED
		
		If Existblock("F473CAOK")
			lcanok := .T.
			lf473 := Execblock("F473CAOK",.F.,.F.,nRecSE5)
		Endif	
		
		IF	nOpca1 == 1 .AND. IiF(lcanok,lf473,.T.)
			nSeqDes := FI473SeekSeq(oModelDet,oModelDet:GetValue("RECSE5"),nLinOri)
			
			If nSeqDes > 0
				oModelDet:LoadValue("IG_VLRMOV",0)
				oModelDet:LoadValue("IG_DTMOVI",CTOD("") )
				oModelDet:LoadValue("IG_DOCMOV",SPACE(TamSx3("IG_DOCMOV")[1]) )
				oModelDet:LoadValue("IG_AGEMOV",SPACE(TamSx3("IG_AGEMOV")[1]))
				oModelDet:LoadValue("IG_CONMOV",SPACE(TamSx3("IG_CONMOV")[1]))
				cCor := F473COR("1")
				oModelDet:LoadValue("IG_STATUS","1")
				oModelDet:LoadValue("COR",cCor)
				oModelDet:LoadValue("RECSE5",0)
				
				cSeqCon := oModelDet:GetValue("IG_SEQMOV")
				
				If SE5->(!dbSeek(xFilial("SE5") + cSeqCon ))
					oModelDet:LoadValue("DESCONC","1")
				EndIf
				oModelDet:LoadValue("IG_HISMOV",SPACE(TamSx3("IG_HISMOV")[1]))
				
				oModelDet:GoLine(nSeqDes)
				oModelDet:UnDeleteLine()
			Else //Linha pré conciliada

				nValDes		:= oModelDet:GetValue("IG_VLRMOV")
				dDataDes 		:= oModelDet:GetValue("IG_DTMOVI")
				cNumDes		:= oModelDet:GetValue("IG_DOCMOV")
				cAgeDes		:= oModelDet:GetValue("IG_AGEMOV")
				cCtaDes		:= oModelDet:GetValue("IG_CONMOV")
				cHistDes		:= oModelDet:GetValue("IG_HISMOV")
				nRecnoSE5		:= oModelDet:GetValue("RECSE5")
				cDCOri	    	:= oModelDet:GetValue("IG_CARTER")
				
				oModelDet:LoadValue("IG_VLRMOV",0)
				oModelDet:LoadValue("IG_DTMOVI",CTOD("") )
				oModelDet:LoadValue("IG_DOCMOV",SPACE(TamSx3("IG_DOCMOV")[1]))
				oModelDet:LoadValue("IG_AGEMOV",SPACE(TamSx3("IG_AGEMOV")[1]))
				oModelDet:LoadValue("IG_CONMOV",SPACE(TamSx3("IG_CONMOV")[1]))
				cCor := F473COR("1")
				oModelDet:LoadValue("IG_STATUS","1")
				oModelDet:LoadValue("COR",cCor)
				oModelDet:LoadValue("RECSE5",0)
				oModelDet:LoadValue("IG_HISMOV",SPACE(TamSx3("IG_HISMOV")[1]))
				oModelDet:LoadValue("DESCONC","1")
				
				//Cria a nova Linha
				nLinhaNov := oModelDet:AddLine(.T.)


				oModelDet:LoadValue("IG_VLRMOV",nValDes)
				oModelDet:LoadValue("IG_DTMOVI",dDataDes)
				oModelDet:LoadValue("IG_DOCMOV",cNumDes)
				oModelDet:LoadValue("IG_AGEMOV",cAgeDes)
				oModelDet:LoadValue("IG_CONMOV",cCtaDes)
				oModelDet:LoadValue("IG_STATUS","1")
				cCor := F473COR("1")
				oModelDet:LoadValue("COR",cCor)
				oModelDet:LoadValue("RECSE5",nRecnoSE5)
				oModelDet:LoadValue("IG_HISMOV",cHistDes)
				oModelDet:LoadValue("SEQDIG",cValToChar(nLinhaNov))
				oModelDet:LoadValue("IG_CARTER",cDCOri)
				oModelDet:LoadValue("IG_TIPMOV","")
				oModelDet:LoadValue("IG_TIPDSC","")
				oModelDet:LoadValue("DESCONC","1")
			EndIf
		EndIf
	Endif
EndIf
FWRestRows(aSaveLines)

__lConManual := .F.

FI473ACTMD(oModel)

If oView != Nil
	oView:Refresh()
EndIf

RestArea(aAreaSE5)
RestArea(aArea)

Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FI473SeekSeq
Retorna a linha da linha conciliada

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function FI473SeekSeq(oModelDet,nRecSE5,nLinOri )
Local nLinha 	:= 0
Local nRet		:= 0
Local nLinSav	:= oModelDet:GetLine()

For nLinha := 1 to oModelDet:Length()
	oModelDet:GoLine(nLinha)
	 
	If oModelDet:GetValue("RECSE5") == nRecSE5 .And.nLinha != nLinOri
		nRet := nLinha
		Exit
	EndIf

Next nLinha


oModelDet:GoLine(nLinSav)
Return nRet

//-------------------------------------------------------------------
/*/{Protheus.doc} MontaVCab
Retorna estrutura do tipo FWFormViewStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

static function MontaVCab()
Local oStruct := FWFormViewStruct():New()
oStruct:AddField( 'BANCO','1',STR0022,STR0022,, 'Get',,,,.F. )//'Banco'
oStruct:AddField( 'AGENCIA','2',STR0025,STR0025,, 'Get','@!',,,.F. )//'Agencia'
oStruct:AddField( 'CONTA','3',STR0027,STR0027,, 'Get',,,,.F. )//'Conta'
oStruct:AddField( 'DATADE','4',STR0029,STR0029,, 'Get',,,,.F. )//'Data De'
oStruct:AddField( 'DATAATE','5',STR0030,STR0030,, 'Get',,,,.F. )//'Data Ate'
oStruct:AddField( 'AGLUTINA','6',STR0030,STR0030,, 'Combo',,,,.F.,,,{STR0031, STR0032} )//'Aglut Lanc'
oStruct:AddField( 'MOSTRACTB','7',STR0033,STR0033,, 'Combo',,,,.F.,,,{STR0031, STR0032} )//'Mostra Lanc'
oStruct:AddField( 'CTBONLINE','8',STR0034,STR0034,, 'Combo',,,,.F.,,,{STR0031, STR0032} )//'Contb On Line'
oStruct:AddField( 'SELFIL','9',"Seleciona Filial","Seleciona Filial",, 'Combo',,,,.F.,,,{STR0031, STR0032} )//'Contb On Line'

return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} MontaVRec
Retorna estrutura do tipo FWFormViewStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

static function MontaVRec()
Local oStruct := FWFormViewStruct():New()
oStruct:AddField( 'TEXTO','1',STR0050     ,STR0050    ,, 'Get', ,,,.F. )//"Recebimento"
oStruct:AddField( 'VALOR','2',STR0051,STR0051,, 'Get','@E 9,999,999,999,999.99',,,.F. )//"Valor"
return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} viewoStr4Str()
Retorna estrutura do tipo FWFormViewStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

static function MontaVPag()
Local oStruct := FWFormViewStruct():New()

oStruct:AddField( 'TEXTO','1',STR0052     ,STR0052     ,, 'Get', ,,,.F. )//"Pagamento"
oStruct:AddField( 'VALOR','2',STR0051,STR0051,, 'Get','@E 9,999,999,999,999.99',,,.F. )//"Valor"

return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} viewoStr5Str()
Retorna estrutura do tipo FWFormViewStruct.

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

static function MontaVSal()
Local oStruct := FWFormViewStruct():New()
oStruct:AddField( 'TEXTO','1',STR0053     ,STR0053    ,, 'Get', ,,,.F. )//"Saldo"
oStruct:AddField( 'VALOR','2',STR0051,STR0051,, 'Get','@E 9,999,999,999,999.99',,,.F. )//"Valor"
return oStruct

//-------------------------------------------------------------------
/*/{Protheus.doc} FA473Leg()
Mostra Legenda da Reconciliacao   

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Function FA473Leg()
Local oDlg2
Local lRet		:= .T.
Local oModel	:= FWModelActive()

DEFINE MSDIALOG oDlg2 FROM  69,70 TO 165,331 TITLE  STR0054 PIXEL  //"Legenda - Reconciliação Automática"
@ 05 , 5 BITMAP NAME "BR_VERDE" 		SIZE 8,8 of Odlg2 PIXEL
@ 15 , 5 BITMAP NAME "BR_AMARELO" 		SIZE 8,8 of Odlg2 PIXEL
@ 25 , 5 BITMAP NAME "BR_CINZA" 		SIZE 8,8 of Odlg2 PIXEL
@ 35 , 5 BITMAP NAME "DISABLE" 			SIZE 8,8 of Odlg2 PIXEL
@ 05 , 19 SAY  STR0055  	SIZE 115, 7 OF oDlg2 PIXEL  //"  Reconciliado"
@ 15 , 19 SAY  STR0056  	SIZE 100, 7 OF oDlg2 PIXEL  //"  Reconciliado Parcial"
@ 25 , 19 SAY  STR0057  	SIZE 100, 7 OF oDlg2 PIXEL  //"  Reconciliado Anteriormente"
@ 35 , 19 SAY  STR0058  	SIZE 100, 7 OF oDlg2 PIXEL  //"  Não Reconciliado"
DEFINE SBUTTON FROM 20, 100 TYPE 1 ENABLE ACTION (oDlg2:End()) OF oDlg2
ACTIVATE MSDIALOG oDlg2 CENTERED

oModel:GetModel("CONDETAIL"):GoLine(1)
oModel:GetModel("TOTREC"):GoLine(1)
oModel:GetModel("TOTSAL"):GoLine(1)
oModel:GetModel("TOTPAG"):GoLine(1)

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} FA473CanEfet()
Cancela lancamento do extrato no SE5   

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function FA473CanEfet(oView)
Local nOpca1 		:= 0
Local oDlg1		:= Nil
Local oModel		:= FWModelActive()
Local oModelCab	:= oModel:getModel('CONMASTER')
Local oModelDet	:= oModel:getModel('CONDETAIL')
Local aSaveLines	:= FWSaveRows()
Local lEfetiva	:= oModelDet:GetValue("IG_EFETIVA") == '1'
Local nRecSE5		:= oModelDet:GetValue("RECSE5")
Local lAtuSldNat := .T.
Local aArea		:= GetArea()
Local aAreaSE5	:= SE5->(GetArea())
Local cFilX		:= cFilAnt
Local lContab	 	:= .F.
Local oModelMov
Local cLog := ""
Local lRet := .T.
Local oSubFKA
Local oSubFK5
Local cCamposE5 := ""

cFilAnt := oModelDet:GetValue("IG_FILORIG")

dbSelectArea("SE5")


If lEfetiva
	DEFINE MSDIALOG oDlg1 FROM  69,70 TO 160,331 TITLE  STR0047 PIXEL  //"Reconciliacao bancaria Automatica"
	@  0, 2 TO 22, 128 OF oDlg1	PIXEL
	@  7.5,  9 SAY  STR0085  SIZE 115, 7 OF oDlg1 PIXEL  //"Esta movimentacao ja se encontra efetivada   "
	@ 14  ,  9 SAY  STR0049  SIZE 100, 7 OF oDlg1 PIXEL  //"             Deseja cancelar ?               "
	DEFINE SBUTTON FROM 29, 71 TYPE 1 ENABLE ACTION (nOpca1:=1,oDlg1:End()) OF oDlg1
	DEFINE SBUTTON FROM 29, 99 TYPE 2 ENABLE ACTION (oDlg1:End()) OF oDlg1
	
	ACTIVATE MSDIALOG oDlg1 CENTERED
	
	IF	nOpca1 == 1
		SE5->(DbGoto(nRecSE5))
		
		cCamposE5 += "{"
		cCamposE5 += "{'E5_RECONC', ''}"																	
		cCamposE5 += "}"
				
		oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
		oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
		oModelMov:Activate()
		oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação SE5				
		oModelMov:SetValue( "MASTER", "E5_OPERACAO", 1 ) //E5_OPERACAO 1 = Altera E5_SITUACA da SE5 para 'C' e gera estorno na FK5
		oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
		
		//Posiciona a FKA com base no IDORIG da SE5 posicionada
		oSubFKA := oModelMov:GetModel( "FKADETAIL" )
		oSubFKA:SeekLine( { {"FKA_IDORIG", SE5->E5_IDORIG } } )
		
		//Dados do movimento
		oSubFK5 := oModelMov:GetModel( "FK5DETAIL" )
		oSubFK5:SetValue( "FK5_DTCONC", CTOD("") )
		oSubFK5:SetValue( "FK5_SEQCON", "" )
	
		If oModelMov:VldData()
	       	oModelMov:CommitData()
	       	oModelMov:DeActivate()
		Else
			lRet := .F.
		    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
		    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
		    cLog += cValToChar(oModelMov:GetErrorMessage()[6])        	
       
	       	Help( ,,"MF473CANEF",,cLog, 1, 0 )	
		Endif					
		
		If lRet
		
			If Existblock("F473CAGR")
			 	ExecBlock( "F473CAGR", .F., .F. ,nRecSE5) // Complemento de Gravação na SE5. 
			Endif	
		
			//Atualiza saldo bancario quando da efetivação de movimento 
			AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DATA,SE5->E5_VALOR,IIF(SE5->E5_RECPAG == "R","-","+"),.T.,.T.)
		
			If lAtuSldNat
				AtuSldNat(SE5->E5_NATUREZ, SE5->E5_DATA, "01", "3", SE5->E5_RECPAG, SE5->E5_VALOR, 0, "-",,FunName(),"SE5", SE5->(Recno()),0)
			Endif
			
			FWModelActive (oModelDet)
	
			oModelDet:LoadValue("IG_VLRMOV",0)
			oModelDet:LoadValue("IG_DTMOVI",CTOD(""))
			oModelDet:LoadValue("IG_DOCMOV",SPACE(TamSx3("IG_DOCMOV")[1]))
			oModelDet:LoadValue("IG_AGEMOV",SPACE(TamSx3("IG_AGEMOV")[1]))
			oModelDet:LoadValue("IG_CONMOV",SPACE(TamSx3("IG_CONMOV")[1]))
			cCor := F473COR("1")
			oModelDet:LoadValue("IG_STATUS","1")
			oModelDet:LoadValue("COR",cCor)
			oModelDet:LoadValue("RECSE5",0 )
			oModelDet:LoadValue("IG_HISMOV",SPACE(TamSx3("IG_HISMOV")[1]))
			oModelDet:LoadValue("IG_NATMOV",SPACE(TamSx3("IG_NATMOV")[1]))
			oModelDet:LoadValue("IG_EFETIVA",SPACE(TamSx3("IG_EFETIVA")[1]))
			oModelDet:LoadValue("DESCONC","1")
			
			SE5->(DbGoto(nRecSE5))
			
			//Verifica se gera lancamento na contabilidade.	
			If SE5->E5_RECPAG =="R"
				cPadrao:= "565"
				If VerPadrao(cPadrao)
					lContab:=.T.
				EndIf
			Else
				cPadrao:= "564"
				If VerPadrao(cPadrao)
					lContab:=.T.
				EndIf
			EndIf
		                
			If lContab
				aAdd(__aRecCTB,{nRecSE5 ,cPadrao, SE5->E5_FILORIG })
			EndIf
		Endif
	EndIf
Else
	Help(" ",1,"FIN473CAN",,STR0086, 1, 0 )//"Esse registro não foi efetivado pela rotina de Reconciliação Bancária."
EndIf

cFilAnt := cFilX

FWRestRows(aSaveLines)
FI473ACTMD(oModel)

RestArea(aAreaSE5)
RestArea(aArea)

oView:Refresh()
Return

//-------------------------------------------------------------------
/*/{Protheus.doc} FA473Efet()
Efetiva lancamento do extrato no SE5   

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function FA473Efet(oView)

Local cRecPagE5
Local oDlg3
Local oDlg4
Local nOpcaE		:= 0
Local nOpcaN		:= 0
Local lAchou		:= .F.
Local oModel		:= FWModelActive()
Local oModelCab		:= oModel:getModel('CONMASTER')
Local oModelDet		:= oModel:getModel('CONDETAIL')
Local cNaturEfet	:= CRIAVAR("ED_CODIGO")
Local cCCD			:= CRIAVAR("E5_CCD")	// Centro Custo Debito
Local cCCC			:= CRIAVAR("E5_CCC") // Centro Custo Credito
Local cItemD		:= CRIAVAR("E5_ITEMD")  //Item contabil Debito
Local cItemC		:= CRIAVAR("E5_ITEMC")  //Item contabil Credito
Local cClVlDb		:= CRIAVAR("E5_CLVLDB")  //Classe de Valor Debito
Local cClVlCr		:= CRIAVAR("E5_CLVLCR")  //Classe de Valor Credito
Local cCDeb			:= CRIAVAR("E5_DEBITO")	// Conta Contábil Debito
Local cCCrd			:= CRIAVAR("E5_CREDITO") // Conta Contábil Credito
Local cHistor		:= oModelDet:GetValue("IG_HISTEXT") // Historico do movimento
Local oBtn			:= Nil
Local lPmsInt		:= IsIntegTop(,.T.)
Local bPMSDlgMB		:= {|| }
Local nValorLan		:= oModelDet:GetValue("IG_VLREXT")
Local cStatus		:= oModelDet:GetValue("IG_STATUS")
Local dDataExt		:= oModelDet:GetValue("IG_DTEXTR")
Local cDocExt		:= oModelDet:GetValue("IG_DOCEXT")
Local cBanco		:= oModelCab:GetValue("BANCO")
Local cAgencia		:= oModelCab:GetValue("AGENCIA")
Local cConta		:= oModelCab:GetValue("CONTA")
Local cTipoSist		:= oModelDet:GetValue("IG_TIPMOV")
Local cDC			:= IIF( oModelDet:GetValue("IG_CARTER") == "1","R","P")
Local aSaveLines	:= FWSaveRows()
Local cFilX			:= cFilAnt
Local lEFEoK		:= .F.
Local aEfeOK		:= {}

Private aCamp		:= {} // Utilizado nos pontos de entrada F473EFE, F473EFOK
Private aRatAJE		:= {}

//O Movimento é gerado na mesma filial da conciliação
cFilAnt := oModelDet:GetValue("IG_FILORIG")

SE5->(dbSetOrder(13)) //E5_FILIAL+E5_BANCO+DTOS(E5_DTDISPO)+E5_CONTA+E5_AGENCIA+E5_TIPODOC

If IntePms().AND. !lPmsInt
	_SetOwnerPrvt("E5_VALOR", nValorLan )
EndIf

If cStatus == '1' .and. !Empty(nValorLan)

	If	SE5->(dbSeek(xFilial("SE5")+ cBanco  +DTOS(dDataExt) + cConta + cAgencia ))
		While SE5->(!EOF()) .and. DTOS(SE5->E5_DTDISPO) == DTOS(dDataExt)
			cRecPagE5 := SE5->E5_RECPAG

			// Esta validação estava impedindo a conciliação             
			// quando o lançamento tinha na mesma data uma movimentaçao  
			// de cheque. A validação foi alterada para so bloqueio se o 
			// Tipo do movimento for de cheque tambem.                   

			If !Empty(cDocExt) .and. cTipoSist $ "CHQ" .and. Alltrim(SE5->E5_NUMCHEQ) == Alltrim(cDocExt) .and. cRecPagE5 == cDC
				Help(" ",1,"A470EXIST")
				lAchou := .T.
				Exit
			EndIf

			If SE5->E5_VALOR == nValorLan .and. Empty(SE5->E5_NUMCHEQ) .and. cRecPagE5 == cDC .And. SE5->E5_SITUACA != "C"

				DEFINE MSDIALOG oDlg3 FROM  69,90 TO 220,400 TITLE  STR0062 PIXEL  //"Efetivação de Lançamento no SE5"
				@ 00 , 03 TO 55, 152 OF oDlg4 PIXEL
				@ 10 , 10 SAY  STR0063  SIZE 140, 7 OF oDlg3 PIXEL  //"Existe lançamento semelhante em Data, Valor e Carteira."
				@ 20 , 10 SAY  STR0064  SIZE 140, 7 OF oDlg3 PIXEL  //"no seu arquivo de movimentos bancários.	Em caso de     "
				@ 30 , 10 SAY  STR0065  SIZE 140, 7 OF oDlg3 PIXEL  //"dúvida, não efetive o lançamento, pois poder  gerar    "
				@ 40 , 10 SAY  STR0066  SIZE 140, 7 OF oDlg3 PIXEL  //"duplicidade. Deseja efetivar este lançamento ?			"
				DEFINE SBUTTON FROM 60, 50 TYPE 1 ENABLE ACTION (nOpcaE:=1,oDlg3:End()) OF oDlg3
				DEFINE SBUTTON FROM 60, 80 TYPE 2 ENABLE ACTION (nOpcaE:=2,oDlg3:End()) OF oDlg3
	
				ACTIVATE MSDIALOG oDlg3 CENTERED

				If nOpcaE == 1
					lAchou := .F.
				Else
					lAchou := .T.
				EndIf
				Exit
			EndIf
			SE5->(dbSkip())
		EndDo
	EndIf
	If !lAchou
		nOpcaN := 0
		
		If Existblock("F473EFE")
			DEFINE MSDIALOG oDlg4 FROM  69,70 TO 400,400 TITLE STR0067 PIXEL	//"Reconciliação Bancária - Tela Maior"
			@ 0, 2 TO 180, 133 OF oDlg4 PIXEL
		Else
			DEFINE MSDIALOG oDlg4 FROM  69,70 TO 372,400 TITLE STR0067 PIXEL	//"Reconciliação Bancária"
			@ 0, 2 TO 150, 133 OF oDlg4 PIXEL
		Endif
		
	
		@ 07, 80 MSGET cNaturEfet  F3 "SED" VALID (!Empty(cNaturEfet) .and. ExistCpo("SED",cNaturEfet) .And. FinVldNat(.T.,cNaturEfet))  SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@ 08, 08 SAY  STR0068  SIZE 80, 7 OF oDlg4 PIXEL  //"Natureza do Lançamento"
	
		@ 28, 08 MSGET cHistor SIZE 122, 10 OF oDlg4 PIXEL PICTURE "@S40"
		@ 19, 08 SAY STR0069 SIZE 80, 7 OF oDlg4 PIXEL  //"Histórico"
	
		@ 41, 80 MSGET cCDeb  F3 "CT1" VALID (Empty(cCDeb) .or.CTB105CTA(cCDeb)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@ 42, 08 SAY  STR0070  SIZE 80, 7 OF oDlg4 PIXEL  //"Conta Débito"
		@ 54, 80 MSGET cCCrd  F3 "CT1" VALID (Empty(cCCrd) .or.CTB105CTA(cCCrd)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@ 55, 08 SAY  STR0071  SIZE 80, 7 OF oDlg4 PIXEL  //"Conta Crédito"
	
		@ 67, 80 MSGET cCCD  F3 "CTT" VALID (Empty(cCCD) .or. CTB105CC(cCCD)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@ 68, 08 SAY  STR0072  SIZE 80, 7 OF oDlg4 PIXEL  //"Centro Custo Débito"
		@ 80, 80 MSGET cCCC  F3 "CTT" VALID (Empty(cCCC) .or. CTB105CC(cCCC)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@ 81, 08 SAY  STR0073  SIZE 80, 7 OF oDlg4 PIXEL  //"Centro Custo Crédito"
	

		@ 93, 80 MSGET cItemD  F3 "CTD" VALID (Empty(cItemD) .or. CTB105ITEM(cItemD)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@ 94, 08 SAY  STR0074  SIZE 80, 7 OF oDlg4 PIXEL  //"Item Contabil Débito"
		@107, 80 MSGET cItemC  F3 "CTD" VALID (Empty(cItemC) .or. CTB105ITEM(cItemC)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@108, 08 SAY  STR0075  SIZE 80, 7 OF oDlg4 PIXEL  //"Item Contabil Crédito"

		@120, 80 MSGET cClVlDb F3 "CTH" VALID (Empty(cClVlDb) .or. CTB105CLVL(cClVlDb)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@121, 08 SAY  STR0076  SIZE 80, 7 OF oDlg4 PIXEL  //"Classe Valor Débito"
		@133, 80 MSGET cClVlCr F3 "CTH" VALID (Empty(cClVlCr) .or. CTB105CLVL(cClVlCr)) SIZE 50, 10 OF oDlg4 PIXEL HASBUTTON
		@134, 08 SAY  STR0077  SIZE 80, 7 OF oDlg4 PIXEL  //"Classe Valor Crédito"

		If Existblock("F473EFE")
			 ExecBlock( "F473EFE", .F., .F. ,{oDlg4} )
		Endif	
		
		
		DEFINE SBUTTON FROM 07, 135 TYPE 1 ENABLE ACTION (nOpcaN:=1,If((!Empty(cNaturEfet) .and. ExistCpo("SED",cNaturEfet)),oDlg4:End(),nOpcaN:=0)) OF oDlg4
		DEFINE SBUTTON FROM 20, 135 TYPE 2 ENABLE ACTION (nOpcaN:=2,oDlg4:End()) OF oDlg4
	
		If IntePMS()
			bPMSDlgMB	:= {||PmsDlgMB(3, SE5->E5_PROJPMS, SE5->E5_HISTOR, SE5->E5_RECPAG)}
			@ 033, 135 Button oBtn Prompt "PMS" Size 30, 11 FONT oDlg4:oFont Action Eval(bPmsDlgMB) Of oDlg4 Pixel
			oBtn:SetFocus()
		EndIf
	
		ACTIVATE MSDIALOG oDlg4 CENTERED


		If nOpcaN == 1 .And. FA473OK()
			If Existblock("F473EFOK")
			aEfeOK := {cNaturEfet,cCCC,cCCD,cItemD,cItemC,cClVlDb,cClVlCr,cCCrd,cCDeb,cHistor,oModel,aCamp}
			lEFEoK := ExecBlock( "F473EFOK", .F., .F.,aEfeOK )
				If lEFEoK
					FA473GrvEf(cNaturEfet,cCCC,cCCD,cItemD,cItemC,cClVlDb,cClVlCr,cCCrd,cCDeb,cHistor,oModel)
				Endif	
			Else
				FA473GrvEf(cNaturEfet,cCCC,cCCD,cItemD,cItemC,cClVlDb,cClVlCr,cCCrd,cCDeb,cHistor,oModel)
			Endif
			If IntePMS()
				PmsWriteMB(1, "SE5")
			EndIf
			
		Endif
	Endif
Else
	Help(" ",1,"A470JA_REC")
Endif

cFilAnt := cFilX

FWRestRows(aSaveLines)

oModel:GetModel("TOTREC"):GoLine(1)
oModel:GetModel("TOTSAL"):GoLine(1)
oModel:GetModel("TOTPAG"):GoLine(1)

oView:Refresh()

Return .T.


//-------------------------------------------------------------------
/*/{Protheus.doc} FA473GrvEf()
 Grava Efetivacao   

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function FA473GrvEf(cNaturEfet,cCCC,cCCD,cItemD,cItemC,cClVlDb,cClVlCr,cCCrd,cCDeb,cHistor,oModel)
Local nValorMov
local lContab	:= .F.
Local nRecno	:=0
Local lRet		:= .T.
Local lAtuSldNat := .T.
Local oModelAux := FWModelActive()
Local oModelCab	:= oModel:getModel('CONMASTER')
Local oModelDet	:= oModel:getModel('CONDETAIL')
Local cBanco		:= oModelCab:GetValue("BANCO")
Local cAgencia	:= oModelCab:GetValue("AGENCIA")
Local cConta		:= oModelCab:GetValue("CONTA")
Local cTipoSist	:= oModelDet:GetValue("IG_TIPMOV")
Local cDC			:= IIF( oModelDet:GetValue("IG_CARTER") == "1","R","P")
Local dDataExt	:= oModelDet:GetValue("IG_DTEXTR")
Local aAreaSE5	:=SE5->(GetArea())
Local aArea		:=GetArea()
Local cPadrao		:= ""
Local aSaveLines := FWSaveRows()
Local lGeraLanc	:= Iif(oModelCab:GetValue('CTBONLINE') == '1',.T.,.F.)
Local oModelMov := FWLoadModel("FINM030")
Local oSubFKA
Local oSubFK5
Local oSubFK8
Local cLog := ""
Local cCamposE5 := ""

nValorMov := oModelDet:GetValue("IG_VLREXT")


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Grava Movimentacao da efetivacao no SE5.                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lRet
	//Define os campos que não existem na FK5 e que serão gravados apenas na E5, para que a gravação da E5 continue igual
	cCamposE5 := "{"
	cCamposE5 += "{'E5_VENCTO', STOD('" + DTOS(dDataExt) + "')}"
	cCamposE5 += ",{'E5_DTDIGIT', STOD('" + DTOS(dDataExt) + "')}"	
	cCamposE5 += "}"
	
	oModelMov:SetOperation( MODEL_OPERATION_INSERT ) //Inclusao
	oModelMov:Activate()
	oModelMov:SetValue( "MASTER", "E5_GRV", .T. )
	oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5
	oModelMov:SetValue( "MASTER", "NOVOPROC", .T. ) //Informa que a inclusão será feita com um novo número de processo
	
	//Dados do Processo
	oSubFKA := oModelMov:GetModel("FKADETAIL")
	oSubFKA:SetValue( "FKA_IDORIG", FWUUIDV4() )
	oSubFKA:SetValue( "FKA_TABORI", "FK5" )
	
	//Dados do Movimento
	oSubFK5 := oModelMov:GetModel("FK5DETAIL")
	oSubFK5:SetValue( "FK5_BANCO", cBanco )
	oSubFK5:SetValue( "FK5_AGENCI", cAgencia )
	oSubFK5:SetValue( "FK5_CONTA", cConta )	
	oSubFK5:SetValue( "FK5_DATA", dDataExt )
	oSubFK5:SetValue( "FK5_TPDOC", "DH" )
	oSubFK5:SetValue( "FK5_DTDISP", dDataExt )
	oSubFK5:SetValue( "FK5_HISTOR", IIF( Empty(cHistor), oModelDet:GetValue("IG_HISTEXT"), cHistor ) )	
	oSubFK5:SetValue( "FK5_VALOR", nValorMov )			
	oSubFK5:SetValue( "FK5_NATURE", cNaturEfet )	
	oSubFK5:SetValue( "FK5_MOEDA", IIF( cTipoSist=="CHQ", "C1", "M1" ) )			
	oSubFK5:SetValue( "FK5_RECPAG", cDC )
	oSubFK5:SetValue( "FK5_FILORI", cFilAnt )
	oSubFK5:SetValue( "FK5_ORIGEM", FunName() )
	//Verifica se o movimento  referente a um cheque e grava nro do cheque.
	IF cTipoSist $ "CHQ"
		oSubFK5:SetValue( "FK5_NUMCH", oModelDet:GetValue("IG_DOCEXT") ) 
	Endif				
	
	//Dados Contábeis
   	oSubFK8 := oModelMov:GetModel("FK8DETAIL")	
	oSubFK8:SetValue( "FK8_DEBITO", cCDeb )			
	oSubFK8:SetValue( "FK8_CREDIT", cCCrd )		
	oSubFK8:SetValue( "FK8_CCD", cCCD )
	oSubFK8:SetValue( "FK8_CCC", cCCC )
	oSubFK8:SetValue( "FK8_ITEMD", cItemD )
	oSubFK8:SetValue( "FK8_ITEMC", cItemC )
	oSubFK8:SetValue( "FK8_CLVLDB", cClVlDb )
	oSubFK8:SetValue( "FK8_CLVLCR", cClVlCr )
	
	If oModelMov:VldData()
       	oModelMov:CommitData()
       	oModelMov:DeActivate()
	Else
		lRet := .F.
	    cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
	    cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
	    cLog += cValToChar(oModelMov:GetErrorMessage()[6])        	
    
    	Help( ,,"MF473GRVEF",,cLog, 1, 0 )
	Endif
	
	If lRet
		nRecno:=SE5->(Recno())
		
		If Existblock("F473EFGR")
			 ExecBlock( "F473EFGR", .F., .F. ,nRecno)
		Endif	
		
		//Atualiza saldo bancario quando da efetivação de movimento 
		AtuSalBco(SE5->E5_BANCO,SE5->E5_AGENCIA,SE5->E5_CONTA,SE5->E5_DATA,SE5->E5_VALOR,IIF(SE5->E5_RECPAG == "R","+","-"))
		
		If lAtuSldNat
			AtuSldNat(SE5->E5_NATUREZ, SE5->E5_DATA, "01", "3", SE5->E5_RECPAG, SE5->E5_VALOR, 0, "+",,FunName(),"SE5", SE5->(Recno()),0)
		Endif
	
		oModelDet:LoadValue("IG_VLRMOV",SE5->E5_VALOR)
		oModelDet:LoadValue("IG_DTMOVI",SE5->E5_DTDISPO)
		oModelDet:LoadValue("IG_DOCMOV",SE5->E5_NUMCHEQ)
		oModelDet:LoadValue("IG_AGEMOV",SE5->E5_AGENCIA)
		oModelDet:LoadValue("IG_CONMOV",SE5->E5_CONTA)
		cCor := F473COR("3")
		oModelDet:LoadValue("IG_STATUS","3")
		oModelDet:LoadValue("COR",cCor)
		oModelDet:LoadValue("RECSE5",nRecno )
		oModelDet:LoadValue("IG_HISMOV",SE5->E5_HISTOR)
		oModelDet:LoadValue("IG_NATMOV",SE5->E5_NATUREZ)
		oModelDet:LoadValue("IG_EFETIVA","1")
	
		//Verifica se gera lancamento na contabilidade.	
		If SE5->E5_RECPAG =="R"
			cPadrao:= "563"
			If VerPadrao(cPadrao)
				lContab:=.T.
			EndIf
		Else
			cPadrao:= "562"
			If VerPadrao(cPadrao)
				lContab:=.T.
			EndIf
		EndIf
		                
		If lContab .and. lGeraLanc
			aAdd(__aRecCTB,{nRecno ,cPadrao, cFilAnt })
		EndIf
	Endif	
	oModelAux:Activate()
Endif

SE5->(RestArea(aAreaSE5))
RestArea(aArea)
FWRestRows(aSaveLines)

FI473ACTMD(oModel)

Return .T.


//-------------------------------------------------------------------
/*/{Protheus.doc} FA473OK()
 Confirma ou nao a efetivacao.   

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------
Static Function FA473OK()

Return (MsgYesNo( STR0060, STR0061))  //"Confirma Efetivação ?"###"Atenção"

//-------------------------------------------------------------------
/*/{Protheus.doc} F473SE5Rec()
Busca o Recno do SE5 do registro já conciliado  

@author alvaro.camillo

@since 03/10/2013
@version 1.0
/*/
//-------------------------------------------------------------------

Static Function F473SE5Rec(cSeqMov)
Local nRecno	:= 0
Local aArea	:= GetArea()
Local cQuery 	:= ""
Local cTabSE5 := "SIGREC"


cQuery := " "
cQuery += " SELECT "
cQuery += " R_E_C_N_O_ SE5REC "
cQuery += " FROM "+RetSQLName("SE5")+" SE5 "
cQuery += " WHERE "
cQuery += " E5_SEQCON = '"+cSeqMov+"' AND " // Nao tem filial pois o SEQCON é único para o grupo da empresa
cQuery += " SE5.D_E_L_E_T_ = ' ' "
cQuery := ChangeQuery(cQuery)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cTabSE5,.T.,.T.)

If (cTabSE5)->(!EOF())
	nRecno := (cTabSE5)->SE5REC
EndIf
(cTabSE5)->(dbCloseArea())


RestArea(aArea)
Return nRecno
